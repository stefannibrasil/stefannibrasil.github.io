<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ruby on rails on Stefanni Brasil</title>
    <link>https://www.stefannibrasil.me/tags/ruby-on-rails/</link>
    <description>Recent content in ruby on rails on Stefanni Brasil</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 05 Apr 2021 17:41:48 -0700</lastBuildDate><atom:link href="https://www.stefannibrasil.me/tags/ruby-on-rails/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Should you create a new Rails app as API-only?</title>
      <link>https://www.stefannibrasil.me/posts/should-you-go-with-rails-api-only/</link>
      <pubDate>Mon, 05 Apr 2021 17:41:48 -0700</pubDate>
      
      <guid>https://www.stefannibrasil.me/posts/should-you-go-with-rails-api-only/</guid>
      <description>Ruby on Rails API-only gives you all the API standard functionalities (JSON, HTTP headers, Parameter parsing, and Token Authentication, etc.) following the well-known Rails standards.
Before you get too excited and run rails new thecoolest --api on your terminal, you need to take some time to consider what your needs are. You might run into the most confusing part of an API-only Rails app: implementing a secure authentication strategy.
That&amp;rsquo;s because a Rails API-only requests are stateless, so it won&amp;rsquo;t include any functionalities primarily used by browser clients, such as sessions and cookies.</description>
    </item>
    
    <item>
      <title>5 Ways to Handle Your Rails API Authentication</title>
      <link>https://www.stefannibrasil.me/posts/5-ways-to-handle-your-rails-api-authentication/</link>
      <pubDate>Thu, 01 Apr 2021 13:12:38 -0700</pubDate>
      
      <guid>https://www.stefannibrasil.me/posts/5-ways-to-handle-your-rails-api-authentication/</guid>
      <description>Which authentication strategy should you use for Rails API? How to implement a secure authentication strategy is by the far the most confusing part of building an API.
It&amp;rsquo;s extremely important to evaluate your app requirements before choosing any strategy in the first place to avoid any security implications.
There&amp;rsquo;s nothing worse than having to turn your entire Rails API-only into a regular Rails app because midway you realized you needed an OAuth authentication code flow or have an interface for your users, right?</description>
    </item>
    
    <item>
      <title>Is Ruby on Rails Still Relevant in 2021?</title>
      <link>https://www.stefannibrasil.me/posts/is-ruby-on-rails-still-relevant/</link>
      <pubDate>Mon, 22 Feb 2021 10:52:41 -0800</pubDate>
      
      <guid>https://www.stefannibrasil.me/posts/is-ruby-on-rails-still-relevant/</guid>
      <description>Are you thinking of investing your time learning Ruby on Rails but you&amp;rsquo;re not sure you&amp;rsquo;re gonna find a job? Then this post is for you.
When I was learning how to code in 2016, Ruby on Rails was trending and every startup was using it. It was obvious that learning Rails would be an easy way to get my first dev job.
But that was more than 4 years ago.</description>
    </item>
    
  </channel>
</rss>
