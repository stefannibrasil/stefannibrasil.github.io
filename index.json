[{"content":" Meters and meters away from home  I find myself where there’s no time   I opened the window for fresh air  As I am in complete darkness   That’s when Darkness itself entered the room  An ancient caregiver of the land and time  It just stands there, occupying its space  Indistinguishable from its friend, the night   When you seek darkness  it's because you've trapped your light inside   And there it lies, waiting for you to wake up  Blind, looking for the outside morning light that never comes ","permalink":"https://www.stefannibrasil.me/posts/notes/where-there-is-no-time/","summary":" Meters and meters away from home  I find myself where there’s no time   I opened the window for fresh air  As I am in complete darkness   That’s when Darkness itself entered the room  An ancient caregiver of the land and time  It just stands there, occupying its space  Indistinguishable from its friend, the night   When you seek darkness  it's because you've trapped your light inside   And there it lies, waiting for you to wake up  Blind, looking for the outside morning light that never comes ","title":"Darkness enter the timeless room"},{"content":"More than one year ago, I decided that coffee (caffeine in general) wasn\u0026rsquo;t making me any good. I felt hostage to coffee: if I didn\u0026rsquo;t drink it every morning, I\u0026rsquo;d get a terrible headache, forcing me to drink it to avoid being in pain. It also made me feel more anxious during the day. Why was I doing this to myself?\nWhen I had to leave early and didn\u0026rsquo;t have time for drinking coffee, I would seek out for coffee right away. And it had to be before 11am to avoid messing up with my sleep. Except that I don\u0026rsquo;t like the idea of paying almost 10 bucks for a coffee drink.\nWhat I liked about drinking coffee in the morning was that it was a ritual. I\u0026rsquo;d drink in the morning while journaling, reading, or studying, a cue for focus and instropection.\nI never really liked coffee that much \u0026ndash; it was an acquired taste. It was a matter of replacing the drink and keeping the ritual. That\u0026rsquo;s how I embarked on a caffeine-free journey.\nCaffeine-free drinks experiments My husband was the first one who stopped drinking coffee to help with his sleep. I joined him a few months after, trying a few things along the way. Eventually, I got so sensitive to caffeine that even drinking decaf regular coffee would keep me awake at night \u0026gt;.\u0026lt;\nThe most obvious first experiment was loose leaf/sachet teas. I tried lots of them but didn\u0026rsquo;t click for me. I had to try something else.\nI then found out the caffeine-free powder products from Blume, a Canadian brand. I have tried almost all of their latte powder (my favourites are the Blue Lavender and Beetroot blends). I highly recommend trying them out! If you try them, buy directly from their website instead of Amazon to support Canadian businesses :)\nEventually, my husband bought a bag of Chicory Root. I tried once and it was horrible. Continued drinking Blume until I decided I wanted to spend less with this daily part of my life. For comparison, I now buy the roasted Chicory root in bulk at my local refillery and it costs around 22 bucks for ~420g. It lasts 2-3 months, depending on how many servings we drink per day.\nI decided to try Chicory Coffee again. And I finally decided to research how to acquire the taste for it. I was committed to ditching caffeine for once and all.\nHow I make Chicory Coffee We have a small espresso machine with a manual milk frother. I always had coffee with frothed milk, so I thought it would be nice to try that with Chicory Root coffee.\nAnd voila! I\u0026rsquo;ve been experimenting with different variations and it\u0026rsquo;s been part of my morning ritual.\nHere\u0026rsquo;s how I do it:\nI brew a concentrated batch of chicory root tea for the week:\n for a glass of hot water, I add 3-4 tablespoons of chicory root drain store the chicory coffee in a glass on the fridge  When I am ready to drink, I pour a bit of the concentrated coffee in a cup, sweeten it to taste, froth my soy or oat milk and add a dash of cinnamon on top.\nI realized it was may more efficient to brew a batch like this instead of brewing it every day. I learned this after visiting Italy this Summer, where I found a few coffee shops offereing Chicory Cappucino. How cool is that?!\n The best part of drinking chicory root, and other coffee alternatives, is that I can drink them all day, anytime of the day without messing up with my sleep. And spending less ;)\nNext, I want to explore dandellion coffee which is suposed to be similar to chicory. I have seen some local stores selling instant dandellion coffee but similar to coffee, buying the roasted version and brewing it yourself must certainly taste better.\nIf you\u0026rsquo;ve been thinking of expanding your drink menu outside of coffee, I hope you got some inspiration to try some new things. Have fun!\n","permalink":"https://www.stefannibrasil.me/posts/notes/cafeine-free-chicory-root-tea/","summary":"More than one year ago, I decided that coffee (caffeine in general) wasn\u0026rsquo;t making me any good. I felt hostage to coffee: if I didn\u0026rsquo;t drink it every morning, I\u0026rsquo;d get a terrible headache, forcing me to drink it to avoid being in pain. It also made me feel more anxious during the day. Why was I doing this to myself?\nWhen I had to leave early and didn\u0026rsquo;t have time for drinking coffee, I would seek out for coffee right away.","title":"My Coffee-free Journey: Mastering Chicory Root Coffee"},{"content":"One day, Roselyn got home and knew even before she opened the door that the cats were hungry. She had been late that day, and the cats have no problem in letting her know how impatiently they have been waiting for her. After feeding the cats and heating some leftovers to feed herself, she noticed there were two other cats in her home.\nTwo shadows that looked exactly like cats, to be more precise.\nThey were perfectly-mirrored shadows of her cats: a black cat, and a tuxedo one.\nThe shadows were below her living room’s table, staring at her. She didn’t know what to do other than to stare back. The shadows didn’t do any sounds or movements, they continued to just stare.\nLife got busy, Roselyn continued to get late at home. The days repeated. And the shadows stayed the same.\nDays, weeks, months, years have passed and the shadows hadn’t moved a single fur hair. Eventually, Roselyn completely forgot they were there.\nOne day, she realized she never asked them what they were doing there. On a Sunday foggy morning, without giving too much thought, Roselyn asked the shadows:\n\u0026ldquo;What are you doing here in my place?\u0026rdquo;\nNothing. Not even one meow. Eventually, she heard:\n“We were waiting for you to ask. We are here because we need to tell you a secret”, both of them said at the same time in a meowing voice.\nHer years of being a cat mom had trained her to understand their language.\nRoselyn waited patiently for a follow up. Nothing came back, so she asked:\n“What secret?\u0026quot;\nThey replied:\n“When the world collapsed, the cats divinities had compassion for you. You have been a loyal cat sister and we decided to keep you alive, in a sense. This is all an illusion, so you believe you’re still living your old life on Earth as you know it. We just didn’t understand why you never asked us anything until now and kept going to work even after being brought to the Cats paradise”.\n","permalink":"https://www.stefannibrasil.me/posts/a-short-story-about-cats-in-the-dark/","summary":"One day, Roselyn got home and knew even before she opened the door that the cats were hungry. She had been late that day, and the cats have no problem in letting her know how impatiently they have been waiting for her. After feeding the cats and heating some leftovers to feed herself, she noticed there were two other cats in her home.\nTwo shadows that looked exactly like cats, to be more precise.","title":"Dark Cats"},{"content":"Last year when visiting my local library (something that I love to do), an intriguing book cover caught my attention. It had a bright yellow cover with an interesting title: How to Be Perfect: The Correct Moral Answer to Every Question, from Michael Schur.\nI checked it out without any questioning. It explains the process Michael went through to produce one of my favorite TV shows: \u0026ldquo;The Good Place\u0026rdquo;. If you have ever watched shows produced by Michael Schur, you might antecipate that the book is funny. That\u0026rsquo;s not the only adjective I\u0026rsquo;d use to describe it. The book is instructive in a way that you don\u0026rsquo;t even notice, guiding you through Philosophy schools while joyfully introducing moral questions that are extremely relevant to our modern days.\nEver since I finished reading it, I started reflecting on how I can be a better person. Not just for my only benefit \u0026ndash; for other living beings as well. I decided I have the moral obligation to be better; to leave this world in a better place than when I got here. It might be a presumptious declaration but I don\u0026rsquo;t care. I genuinely want to at least try to do less harm and help build the world I want to see.\nThis reflection aligned with something I\u0026rsquo;ve always believed in since I was young: there\u0026rsquo;s more to life than building a good life for yourself. This inclination has always guided me through making decisions in my life based on what I wanted, and not on what society tells me I should do: have a good job, a house, kids, go on vacation multiple times per year, etc. I want more for my life than a prescription. I suspect you do as well.\nWhat else is yearning inside of you besides just achieving whatever the \u0026ldquo;good life\u0026rdquo; means to you? As my personal quest evolved, I made some changes in 2024. At its core, I want to make more conscious choices. More practically, I started a few life projects:\nBye, big evil tech corporations I started moving away from big evil tech corporations such as Google and Twitter, etc. As alternatives, I am now using Proton services, which provides competitive products to Google. You can use my Proton\u0026rsquo;s referral code if you want to try it out. I am also using Bluesky after deleting my Twitter account.\nMy goal for next year is to stop using Google services completely. The reason why it\u0026rsquo;s so hard at first is because they make it so convenient to use. However, I didn\u0026rsquo;t want the perfect to be the enemy of good, and am slowly stopping to use Google.\nI\u0026rsquo;m still migrating some files from Google Drive to Proton Drive. I\u0026rsquo;ve also started using more Apple Maps than Google Maps. The limitations I\u0026rsquo;m figuring out how to work around is using Apple Maps for my bike routes and where to transfer my spreadsheets to since Proton doesn\u0026rsquo;t support them yet. Fun projects for 2025 :)\nOnce I am done with Google for good, the next big app I will stop using is WhatsApp. Not sure yet which service to switch to, or maybe I won\u0026rsquo;t even use an alternative. April 2025 update: WhatsApp is gone. Using Signal now, which at least promises not storing data and it\u0026rsquo;s not owned by evil people.\nThe other big evil tech corp I am stopping to use is Amazon. This year, my purchases there decreased significantly, coming down to almost 0. I do not want to support services that don\u0026rsquo;t treat their employees with dignity and just care about profits. Now, I search for local shops/services. Even though it means I will need to physically go somewhere, search at different places, take more of my time, etc. When I need something delivered, I purchase through the sellers directly and prepare for the longer delivery times. Not so bad at all.\nI know that Amazon makes things super convenient and it\u0026rsquo;s hard to let that go but I feel good every time I support a local business instead. For example, recently, I took a poster to a local frame shop and I got to interact folks from the business that has passionate folks and interesting framed arts. Update in April 2025 update: Amazon is gone!\nVolunteering locally One of my goals for 2024 (and from now on) is to build meaningful local connections and friendships. I have made two amazing friends this year and started volunteering at two local organizations. One of them is a local garbage cleanup meetup. It\u0026rsquo;s a great way to spend time outside, help maintain local parks, and be connected with my local community. The other one is a food rescue organization where I volunteer to get food that was going to waste and bring it to a charity in need, helping reduce food waste.\nI have always volunteered a lot in my career and love helping folks. I decided to reroute that passion towards my local community this year and I\u0026rsquo;ve met some interesting folks passionate about the values I want to guide my life. Even if I don\u0026rsquo;t have the time to volunteer, I signed up for local groups newsletters and donate when I can.\nSupporting local and organic businesses driven by a sustainable mission I started supporting more local farms and business that offer sustainable and environmental products and services.\nApril 2025 update: with the current state of our closest North American country, this became even more important to me. I will no longer visit that country and joined the BuyCanadian movement. Best decision ever! So many great products out there made in Canada.\nI\u0026rsquo;ve been eating a plant-based diet since 2019 after educating myself on the environmental impact of animal-based diet, and on the cruelty sustaining this diet. Since then, I noticed I naturally seek services and products that share these values. Practically, I started supporting local farms, buying organic foods, products with recycled packaged, and buying products from local zero waste store as much as possible.\nThere\u0026rsquo;s still a lot to grow here but I feel good with this choice. I try to avoid plastic, single use containers as much as I can. One service that I am happy exists where I live is SPUD - because it makes it easier to find local businesses to support. Another thing I like about SPUD is that they bring the items in reusable bins.\n Before we get to the end, I want to mention an important aspect of getting here: I\u0026rsquo;m in a very good position in my life, financially, with my relationships and politically, aka, I am now in a privileged position that allows me to even think about morality. It wasn\u0026rsquo;t always true \u0026ndash; I worked really hard to get here.\nAs Maslow’s Hierarchy of Needs explains, \u0026ldquo;Self-actualization\u0026rdquo; is only possible once all the foundational needs have been met. This is where I am right now, and I can put my money where my mouth is. My intention with this post is not to make anyone feel guilty about anything but to inspire someone to slowly be the change they want to see in the world.\nAs Michael Schur mentions in the book, when we can, we have the moral obligation to be and do better. I hope you get to read it \u0026ndash; and if you do, let me know what were your favorite chapters.\nTo wrap up, I believe I feel more connected and fulfilled when I think about the effects of my actions and I act with the intention of causing less harm to all living beings, including our planet. I\u0026rsquo;ve done all of this because I\u0026rsquo;ve purposefully designed my life to be simple, which gives me lots of time and space to explore other interests besides my job.\nIt takes time and I am nowhere done. There\u0026rsquo;s probably a lot I am missing too and I am looking foward to learn more about them in the next year. It\u0026rsquo;s important to not go on full martyr mode and only care about others, though. I\u0026rsquo;m happy that I learned about this balance and was able to practice it in 2024.\nWhen I have the choice, I choose the path that causes the least harm.\nThe journey is worth it! I\u0026rsquo;ve met so many inspiring people locally, which gives me more energy to be part of the change. It never ends \u0026ndash; and that\u0026rsquo;s the beauty of it.\n","permalink":"https://www.stefannibrasil.me/posts/notes/2024-reflections/","summary":"Last year when visiting my local library (something that I love to do), an intriguing book cover caught my attention. It had a bright yellow cover with an interesting title: How to Be Perfect: The Correct Moral Answer to Every Question, from Michael Schur.\nI checked it out without any questioning. It explains the process Michael went through to produce one of my favorite TV shows: \u0026ldquo;The Good Place\u0026rdquo;. If you have ever watched shows produced by Michael Schur, you might antecipate that the book is funny.","title":"2024: reflections on the moral obligations of being a better person"},{"content":"The wind, with no excuses and surprises, takes over all the leaves from the trees.\nOne day, I was walking somewhere and witnessed the wind taking the remaining leaves of a tree. All I could think of was:\n\u0026ldquo;wouldn\u0026rsquo;t be great if I could let things go just like that? A strong wind meets my past, removes all that doesn\u0026rsquo;t serve me anymore. For some time, I don\u0026rsquo;t carry anything, just nurture the roots of my core self to give space for a new season\u0026rdquo;.\nSometimes, I want to be a tree. A strong one that survives all weather. Every year, I say goodbye to the past without any attachment, keep still for a while, and eventually give birth to a new me.\n","permalink":"https://www.stefannibrasil.me/posts/notes/fall-thoughts/","summary":"The wind, with no excuses and surprises, takes over all the leaves from the trees.\nOne day, I was walking somewhere and witnessed the wind taking the remaining leaves of a tree. All I could think of was:\n\u0026ldquo;wouldn\u0026rsquo;t be great if I could let things go just like that? A strong wind meets my past, removes all that doesn\u0026rsquo;t serve me anymore. For some time, I don\u0026rsquo;t carry anything, just nurture the roots of my core self to give space for a new season\u0026rdquo;.","title":"Sometimes, I want to be a tree"},{"content":"The bar for offering customer service that doesn\u0026rsquo;t suck is extremely low these days.\nNothing can be more frustrating than needing to speak with a person, only to have to waste time talking to a chatbot. Or, after getting past the chatbot, get frustrated with the lack of attention from the support team.\nIn a world where AI (cough cough) is the answer for every problem, attentive customer service and human touch are what I desperately crave.\nWhen I\u0026rsquo;m having a problem that isn\u0026rsquo;t documented in the FAQs and I reach out to support, it\u0026rsquo;s not my responsibility to know what the problem is nor how to solve it.\nMy impression is that customer service these days relies too much on chatbots to do the listening and comprehension part.\nBut the reality is that I end up repeating myself over and over, hoping the person will understand my problem and find out the right solution.\nAttentive Human-Friendly Customer Service is the Solution After having had terrible customer service experiences, I realized how fortunate I am for contacting some companies that still do it right.\nWhat do I mean by \u0026ldquo;right\u0026rdquo;? I mean:\n having a person on the other side to help me feel listened to and understood by the person get my problem resolved leave the conversation with a good impression that I have their support when I need it  Here\u0026rsquo;s a list of companies with Attentive, Human-friendly Customer Service that I trust  Transistor.fm: every time I needed help, there was a human there to help me. Podia: their in-depth FAQs are great and helpful. When I need to ask something specific, there\u0026rsquo;s a person there to help me. Namecheap Clearful: Timely support from real humans :) ConvertKit: the documentation is great, which makes me need customer support less often. The times I needed support, a real attentive human was there to help me answer my questions.  I hope to keep adding more names to this Human-friendly Customer Service list. And to see that we are using technology to help us, not hurt us.\n ","permalink":"https://www.stefannibrasil.me/posts/good-customer-service-examples/","summary":"The bar for offering customer service that doesn\u0026rsquo;t suck is extremely low these days.\nNothing can be more frustrating than needing to speak with a person, only to have to waste time talking to a chatbot. Or, after getting past the chatbot, get frustrated with the lack of attention from the support team.\nIn a world where AI (cough cough) is the answer for every problem, attentive customer service and human touch are what I desperately crave.","title":"Human-friendly Customer Services List"},{"content":"\u0026ldquo;I am having a hard time asking for help at my new job.\u0026rdquo;\nAfter a couple of hours of being stuck, I sent that message to my friend, Caroline.\nI shared how hard it was for me to be in a place surrounded by talented people. How I felt like I was not worthy of being there. I needed help but I didn’t want to show I needed help.\nAfter all, if I were good enough, I should have known how to solve the problem! Won\u0026rsquo;t they find out I don\u0026rsquo;t know everything if I ask for help?\nShe brilliantly shared a strategy that was better than keep judging myself.\nStart the request by sharing the feeling that is preventing me from showing my vulnerability. Then ask what I need. Here\u0026rsquo;s an example:\n“I feel like I should know this already, but can someone remind me of what X is for?”\nI love this so much. It validates my feelings and makes it easier to reach out to someone.\nI wrote this down on a post-it and placed it on my monitor. I\u0026rsquo;ve used it a couple times since she shared this with me.\nMore Stories About Asking for Help Someone shared with me they don\u0026rsquo;t like asking for help because they value independence. Therefore, relying on someone else is a sign of weakness.\nAnother friend shared they don’t like asking for help because they feel dumb for not knowing things.\nMe? I feel like I should know everything already.\nPerhaps asking for help is something we all have trouble with. Some more than others, certainly.\nBut is that doing us more harm than good?\nDeep inside, we all seek Connection Connection and interdependence are how our brains are wired. We are biologically wired to depend on each other:\n  In \u0026ldquo;How we Show up - Reclaiming Family, Friendship, and Community\u0026rdquo;, Mia Birdsong, shared this brilliant quote from Amoretta Morris:\n “It is okay to ask for help. In fact, by doing so, you are taking part in the divine circle of giving and receiving. While we often focus on what the request means for the asker/recipient, we should remember that giving can be transformative for the helper\u0026hellip; By not asking for help when you need it, you are blocking that flow”.\n Asking for Help initiates Connection Now, whenever I need help, I see it as an opportunity to connect with other people. And being grateful for not being alone in this world.\nI realized I want to be around people who aren’t afraid of asking for help \u0026ndash; and helping others. Of showing that they are figuring things out, just like I am.\nPerhaps\u0026hellip; by getting to the end of this post, you decide to join me.\nLet me know when you do.\n Did you like this article? Then you're gonna love these other ones:\n  2024: reflections on the moral obligations of being a better person   Why you don\u0026rsquo;t need to feel confident to be successful   Imposter Syndrome? You\u0026rsquo;re doing better than you think.   ","permalink":"https://www.stefannibrasil.me/posts/notes/asking-for-help/","summary":"\u0026ldquo;I am having a hard time asking for help at my new job.\u0026rdquo;\nAfter a couple of hours of being stuck, I sent that message to my friend, Caroline.\nI shared how hard it was for me to be in a place surrounded by talented people. How I felt like I was not worthy of being there. I needed help but I didn’t want to show I needed help.\nAfter all, if I were good enough, I should have known how to solve the problem!","title":"Asking for Help Can Be Hard -- Here is How to Make it Easier"},{"content":"When I decided to start Cognitive-Behavior Therapy (CBT), I embarked on a quest: I wanted to find out why my brain was my enemy.\nI didn\u0026rsquo;t get it. If my brain\u0026rsquo;s goal was to keep me alive, why was I wanting to not be alive anymore? It didn\u0026rsquo;t make sense.\nI wanted to find out what was wrong with my brain.\nAfter years of therapy, meditation, and neuroscience research, I got to the conclusion that there was nothing wrong with me.\nMy brain is working as expected. I got it stuck in a loop that could never get out by itself.\nOver time, I developed some coping mechanisms to live with anxiety: biting my nails, overachieving, being a perfectionist. All these heavy words and actions combined, led to a severe burnout in 2020. Everything that used to give me joy, including my career in software development, was no longer making me happy.\nThat\u0026rsquo;s when I started this mental health and personal discovery quest.\nToday, I am a different person. I made peace with myself. I\u0026rsquo;m happy, calm, well, healthy, and grateful. I hope sharing my experience here can help someone who\u0026rsquo;s going through a hard time and finding their way out.\nAt the end of April of 2022, I started taking an anti-depressant: sertraline. Because there\u0026rsquo;s so much stigma and uncertainty about taking anti-depressants, I decided to share my experience before and after taking them. Hopefully, it will help someone make a decision that can change their lives for the better.\nMy mental health journey before 2020 My mental health was never my priority until 2020. I have had different therapists from different modalities. CBT was the approach that most helped me. But I still felt like I wasn\u0026rsquo;t in the mental place I wanted to be. I was close but still afraid I could never actually \u0026ldquo;fully get and stay better\u0026rdquo;.\nFast-forward to the beginning 2022, where I got in a terrible place. I was spending days without doing anything, barely getting out of bed. For a driven, goal-oriented person, procrastinating was something I had a hard time accepting.\nThings were getting really bad, and all the work I\u0026rsquo;d done by then (therapy, meditation, coaching) made me see that I was going to a dark place where I wouldn\u0026rsquo;t be able to get out by myself. I had stopped going to therapy, it didn\u0026rsquo;t feel like it was of any help anymore.\nI decided to ask for help. My husband called my therapist and she suggested going to the Access and Assessment Centre (AAC) in Vancouver. I got an appointment with a psychiatrist at the end of June that year.\nI was advised to call my family doctor to ask for a prescription to help me until the consultation.\nThe moment to decide Before I called him, I did some research about taking anti-depressants. I had no idea what he would recommend, and I wanted to get there prepared.\nMy family doctor asked if I was open to taking sertraline. Sertraline is a Prozac-like anti-depressant, a family of Selective serotonin reuptake inhibitors (SSRIs).\nAt the moment, lots of things crossed my mind:\n \u0026ldquo;what if I get dependent on them?\u0026rdquo; \u0026ldquo;what if I feel lots of side effects?\u0026rdquo; \u0026ldquo;what happens after I stop?\u0026rdquo; \u0026ldquo;I shouldn\u0026rsquo;t need meds. Therapy, meditation\u0026hellip; all for nothing? I should be stronger.\u0026rdquo;  There is still a big stigma around anti-depressants. Even after I got the meds the next day, I still did more research before taking the first pill.\nEventually, I landed in this video. To be completely honest, I was relieved to just see someone saying it helped them and they wish they had started soon. That was a relief. Maybe that could happen with me as well. And I could always decide to stop.\nEven Dr. Huberman mentions hearing a lot of bad statements about antidepressants in this episode about trauma and prescription drugs. It can be scary. You hope it will make you feel better, but there\u0026rsquo;s no guarantee of anything.\nThe reason why I decided to share my experience with anti-depressants is because there\u0026rsquo;s so much stigma about them that can be harmful. I was so relieved I found someone sharing a positive experience.\nBesides all the doubt and apprehension, ultimately I knew I needed extra support. Otherwise, nothing would change. I did not want to keep living like that.\n*A disclaimer before we go on: I can only talk about my experience with sertraline. I feel so lucky and grateful it worked well with me and I didn\u0026rsquo;t experience side effects (except one really bad migraine one day). I also felt a bit mentally tired at the end of the day for the first few days, but nothing exceptional. Since I knew there was different chemistry going on in my head, I allowed myself to take it easy for the first week.\nThe only difference I see is I feel hungrier so I\u0026rsquo;m eating more grains and beans to keep me healthy ans satisfied (since I eat a whole food plant-based diet, it\u0026rsquo;s kinda effortless to eat healthily).\nMy brain on meds I decided to take the 1st pill on April 28th, 2022. The next day, I woke up and my mind was simply\u0026hellip; silent. It was as if all the thoughts were gone, especially the repetitive/intrusive ones. I had never experienced this before.\nI felt so much better, I even went to the gym because I was suddenly feeling more active!\nI have researched depression and anxiety. I have a laic understanding of how my brain works. After taking the meds, it was as if all the strong connections that created this loop of intrusive thoughts were cut loose.\nI\u0026rsquo;ve been meditating almost every day for quite some time now. I notice the streams of thoughts that initiate a rabbit role of anxiety for me. But it wasn\u0026rsquo;t still enough.\nThe pills help me because the thoughts were drastically less intense and less overwhelming, emotionally and mentally. Despite benefiting from mindfulness training, I was still spending lots of energy into resisting the repetitive negative thoughts.\nA bit of science behind anti-depressants I highly recommend watching the episode \u0026ldquo;Dr. Paul Conti: Therapy, Treating Trauma \u0026amp; Other Life Challenges\u0026rdquo; from the Huberman Podcast.\n  \n\nDr. Conti explains why medicine is not a substitute for therapy. He explains that using medicines helps the person engage in therapy as productive as possible:\n \u0026ldquo;Prozac-like medicines seem to make there be more serotonin in certain circuits that are important for mood regulation, anxiety regulation, distress tolerance. it helps get them feeling better and create more distress tolerance\u0026rdquo;.\n That was exactly my experience! The antidepressants created more distress tolerance in me.\nDr. Conti mentions that medicine:\n \u0026ldquo;ease the systems that are making the rigidity and the repetition in the brain\u0026rdquo; \u0026ldquo;help intervene in negative pathways, sending out those tendrils of neurons that are hypervigilant and avoidant in our brains\u0026rdquo;. \u0026ldquo;can take away clinical rumination\u0026rdquo;.  Thank god for that.\nAgain: the meds alone are not the solution. We are complex living beings. We can\u0026rsquo;t just erase our traumas or fix our problems with magic pills. Therapy and other mental health support might be necessary to give yourself the full support you need.\nThat\u0026rsquo;s how taking the meds helped me. I was then able to give myself space to breathe and go back to therapy and take care of myself.\nMy experience after 8 weeks of taking sertraline The worthlessness that results from chronic depression makes it harder to even believe change is possible.\nI\u0026rsquo;m so grateful I accepted pharmaceutical support. I learned not to judge anyone for the type of support they need. I figured, if so many people work so hard on improving these meds to decrease the side effects, why not give it a try? I had nothing to lose. Plus, nothing is permanent in life.\nAnother lesson for me was: traumas don\u0026rsquo;t simply go away 🙃\nI\u0026rsquo;ve been avoiding healing my traumas my entire life. This experience showed me that it was time and I was ready. I\u0026rsquo;m now doing IFS and coaching on imposter complex because now I know my limitations and problems, and how to move forward with the support I need.\nI wanted to share my experience because I was fearful of taking sertraline. I never took any sort of medications and I intended to keep it like that. I couldn\u0026rsquo;t be more grateful for saying yes to prescription drugs because I feel so much better.\nI wish I had done it before. Despite having done therapy, I still needed help. I\u0026rsquo;m proud of making that decision.\nIt\u0026rsquo;s okay to need help \u0026ndash; we all do Support is essential. I know how vulnerable it is and the shame around feeling like a weak person. I wouldn\u0026rsquo;t even have gone to AAC had my husband not called my therapist, and taken me there.\nReach out to whatever grasp of hope is inside of you and ask for help. You deserve to be happy.\nI can\u0026rsquo;t guarantee your experience will be as smooth as mine. Or that therapy will work out at the first attempt. But I can guarantee it\u0026rsquo;s worth trying until you find what works for you.\nKeep trying. You matter. You are worthy. I believe that for you until you start believing in it by yourself 🧡\n Did you like this article? Then you're gonna love these other ones:\n  Why you don\u0026rsquo;t need to feel confident to be successful   Imposter Syndrome? You\u0026rsquo;re doing better than you think.   8 exercises to build confidence in yourself   ","permalink":"https://www.stefannibrasil.me/posts/my-experience-with-anti-depressants/","summary":"When I decided to start Cognitive-Behavior Therapy (CBT), I embarked on a quest: I wanted to find out why my brain was my enemy.\nI didn\u0026rsquo;t get it. If my brain\u0026rsquo;s goal was to keep me alive, why was I wanting to not be alive anymore? It didn\u0026rsquo;t make sense.\nI wanted to find out what was wrong with my brain.\nAfter years of therapy, meditation, and neuroscience research, I got to the conclusion that there was nothing wrong with me.","title":"My Experience With Anxiety, Depression, Therapy and Taking Anti-Depressants"},{"content":"Nothing kills confidence more than waiting to feel confident to do something.\nYou will be waiting forever. Attention and Determination is what you need to achieve your goals \u0026ndash; no matter how scary they are.\nLearning about the power of Attention and Determination made me fall in love with this series about achievement orientation from the First Person Plural podcast. It\u0026rsquo;s one of my favorite podcasts (after hexdevs, of course ;).\nIn this post, I\u0026rsquo;m going to share my takeaways from the episode with Peter Haberl, a Senior sports psychologist. Peter demystifies what it actually takes to perform well and to achieve our goals as driven-oriented people. The episode is entitled \u0026ldquo;Attention is the Currency of Performance\u0026rdquo;.\nI figured\u0026hellip; why not learn tools to be successful and cultivate a more resilient mindset during the process? Who better to teach these tools than an Olympic coach who has trained hundreds of successful athletes?\nLet\u0026rsquo;s dive in.\nConfidence is a trap. Attention is the currency of performance. Peter Haberl starts the discussion by sharing the most common misconception Olympic athletes have about being successful: that confidence is necessary to perform at their best and win the competition.\nHe disagrees with that statement by saying:\n \u0026ldquo;Something that\u0026rsquo;s much more precious for the athletes is attention. To me, attention is the currency of performance. So when athletes perform well at the games, what is always present is their ability to be present, to be focused, to be in the moment. And that actually can be done irrespective of what feelings are shown\u0026rdquo;.\n Up until recently, I still believed that I needed to be feeling a certain way to do my best. The problem with this belief is that feelings are not trustworthy.\nPleasant or unpleasant feelings disappear every couple of seconds. The most useful skill I\u0026rsquo;ve been practicing is self-management: deciding to take action despite how I am feeling.\nI would be pushing off the unpleasant feelings while hoping to feel motivated tomorrow. All while beating myself up for not achieving my goals. This was a trap.\nTo take action despite how I am feeling, first I need to be aware of my internal state.\nNow, what to do once I am focused on the present moment? It\u0026rsquo;s time to cultivate clarity, determination, and resilience.\nClarity, determination, and resilience beat confidence Instead of being led by our feelings and sensations, we are more resilient and mindful when we take charge of how we feel and act based on our determination and values.\nPeter says:\n \u0026ldquo;Confidence is a feeling state. And like all feeling states, they\u0026rsquo;re very fleeting. And that one\u0026rsquo;s leading to and at the games may not materialize or may disappear. And when you think that I have to generate the right feelings to be successful, then you\u0026rsquo;re actually in big trouble. As opposed to can I be in charge of my attention, irrespective of how I feel? And then can I take actions that are perhaps guided by determination and resilience?\u0026rdquo;\n Now, after I become aware of my internal state, I reflect on what matters to me:\n \u0026ldquo;Based on what I am feeling at this moment, how can I be in charge of how I feel and act based on my determination? Where do I choose to put my attention? What do I stand for at this moment?\u0026rdquo;\n And there\u0026rsquo;s nothing else to worry about other than my putting my attention into what matters to me right now, and letting go of what I can\u0026rsquo;t control.\nSometimes, it means taking a break, petting my cat, laying down, and doing nothing. Other times, it\u0026rsquo;s setting another Pomodoro session to honor my word.\nI\u0026rsquo;m no longer my slave driver. I\u0026rsquo;ve been learning how to be my coach; a kind one. To practice resilience and determination. After all, when I achieve a goal, I know the feeling of accomplishment won\u0026rsquo;t last for too long, just like any other.\nWhat matters is what I choose to focus on now. After all, this is the only thing I can ever control.\n I hope you enjoyed this post. I recommend listening to the entire episode and coming to your conclusions. Most of all, you get to experience the joy of living in the present.\nIf this post helped you in some way, let me know on Twitter :)\nEnjoy!\n Did you like this article? Then you're gonna love these other ones:\n  2024: reflections on the moral obligations of being a better person   Asking for Help Can Be Hard \u0026ndash; Here is How to Make it Easier   My Experience With Anxiety, Depression, Therapy and Taking Anti-Depressants   ","permalink":"https://www.stefannibrasil.me/posts/notes/attention-performance-peter-haberl/","summary":"Nothing kills confidence more than waiting to feel confident to do something.\nYou will be waiting forever. Attention and Determination is what you need to achieve your goals \u0026ndash; no matter how scary they are.\nLearning about the power of Attention and Determination made me fall in love with this series about achievement orientation from the First Person Plural podcast. It\u0026rsquo;s one of my favorite podcasts (after hexdevs, of course ;).","title":"Why you don't need to feel confident to be successful"},{"content":"Writing is easy. Anyone can write a post of 500 words.\nBut what does it take to go from a writer to becoming a writer with readers? Insights gathered by trying different things, willingness to make mistakes, and working in public.\nTherefore, I always get curious when I find people who have successfully created writing careers, or businesses on top of their writing skills. This curiosity led me to read \u0026ldquo;The Art and Business of Online Writing\u0026rdquo;, by Nicolas Cole (my co-founder, Thiago Araujo, also recommended reading it).\nIn this post, I\u0026rsquo;m going to share my main takeaways from the book, and how the book helped me write more efficiently at hexdevs.\nMy 3 main lessons from reading \u0026lsquo;The Art And Business Of Online Writing\u0026rsquo; I\u0026rsquo;ve been writing online for a while. Making money with it only recently. Intuitively, I built a process so I never start with a blank page.\nStill, the takeaway I got was to systematize my process. How can I improve it to help my audience even more?\nI\u0026rsquo;m not that much interested in being faster, but more interested in helping my audience. The following 3 steps help me exactly with that:\n1- Start with a title By starting with a title, I am constrained by my audience\u0026rsquo;s needs. Not only that, but it prevents me from wandering/wanting to add lots of things.\n2- Write down the outline What are the beginning, the middle, and the end of this piece of content?\nA title, outlines, and CTA make the post complete. Combined, they show if the post delivers its promise, and what could be removed.\n3- Optimize for online reading (skimmability) Bold paragraphs and headings are how the reader evaluates if they want to actually read the post. It\u0026rsquo;s my job to help them decide.\nAre the headings relevant? Do they read like a story? What are the main points I want my reader to remember?\nThese 3 simple steps help me focus more helping my readers, which is my main goal with writing.\nMy review of \u0026lsquo;The Art and Business of Online Writing\u0026rsquo; This book is NOT for you if you believe writing is the result of motivation or inspiration. That writing is about showing how smart you are.\nThis book IS for you if you are open to trying things out until you find what works for you and your audience, willing to make mistakes and work in public. The book saves you lots of time and frustration while going through the process.\nIf you already have the habit of writing online and have an audience, the second part of the book is more relevant because it explores the business side (that\u0026rsquo;s my case) of things.\nHighly recommended it if you want to help someone with your writing \u0026ndash;and make money with it.\nIf you have read it, what were your favorite takeaways from the book? :)\nDid you like this article? Then you're gonna love these other ones:\n  Darkness enter the timeless room   My Coffee-free Journey: Mastering Chicory Root Coffee   2024: reflections on the moral obligations of being a better person   ","permalink":"https://www.stefannibrasil.me/posts/notes/the-art-and-business-of-online-writing/","summary":"Writing is easy. Anyone can write a post of 500 words.\nBut what does it take to go from a writer to becoming a writer with readers? Insights gathered by trying different things, willingness to make mistakes, and working in public.\nTherefore, I always get curious when I find people who have successfully created writing careers, or businesses on top of their writing skills. This curiosity led me to read \u0026ldquo;The Art and Business of Online Writing\u0026rdquo;, by Nicolas Cole (my co-founder, Thiago Araujo, also recommended reading it).","title":"The 3 Things That Improved My Online Writing Process After Reading 'The Art And Business Of Online Writing'"},{"content":"I know how hard it is to give everything you got for job interviews only to be rejected every time. It\u0026rsquo;s so hard to keep going because every time you get a rejection, it makes you doubt if you\u0026rsquo;re a good developer. In my experience, the feeling of not being a good developer never goes away. It\u0026rsquo;s something worth learning how to handle so it doesn\u0026rsquo;t keep sabotaging you.\nTruly said, nobody wants to hire people with less than 3-5 years of experience. There are a few exceptions, of course, but the competition is super high.\nI know lots of people in the same situation. It has nothing to do with your worth as a developer and as a person.\nMy experience was similar. I moved to Vancouver with only 3 months of experience as a Ruby Developer. It was tough and I wanted to give up several times.\nWhat to do instead of only practicing for technical interviews Regarding having a tough time with interviewing and how to pass on, I will share what worked for me (and I\u0026rsquo;ve seen it working for others).\nYou can spend years practicing for technical interviews. I did not have the patience for that.\nI took a different route: it had worked for me to land my first internship job in Brazil. I decided to give it a try again when I moved to Vancouver.\n\u0026ldquo;Filling in the gaps\u0026rdquo; can be a vicious cycle. You can fill in the gaps for years. And still, keep being rejected.\nWhat worked for me and I advocate for is volunteering and putting yourself out there. I know it\u0026rsquo;s comfortable to keep applying for jobs, doing codewars and exercism all day. You gotta prove you\u0026rsquo;re technical enough, right?\nGetting feedback is the fastest way to fill in the gaps. How will you get feedback if you\u0026rsquo;re practicing on your own? It\u0026rsquo;s possible but it requires deliberate practice.\nVolunteering gives you instant feedback on what your skill gaps are. Real-world scenarios with constraints, and users. It also gives you ooportunities to expand your network, create your opportunities, and share your work with others.\nWhen the company says they won\u0026rsquo;t move forward with you because there were a few gaps in your Ruby knowledge most of the time is a polite way to say \u0026ldquo;I don\u0026rsquo;t know you and I don\u0026rsquo;t know if I can take a chance on you\u0026rdquo;.\nI got my first Ruby dev job with no experience in Brazil at one of the best Ruby startups at the time. I was writing on my blog about what I was learning, volunteering to be a coach at the Rails Girls workshops, attending meetups, etc. Because of that the company decided to give me a chance.\nBy volunteering, you\u0026rsquo;ll be connecting with humans. People who can advocate for you. Endorse you for any opportunities that come up. It\u0026rsquo;s not guaranteed but I bet it will help you much more than just practicing for interviews.\nThe danger of applying for jobs at companies you don\u0026rsquo;t know When you apply for jobs at random, the chances of you landing a crappy job in a toxic environment, especially for early-career developers, is high.\nInstead of shooting for whatever works (unless you need it), make connections with people who can advocate for you.\nLet\u0026rsquo;s say 100 people are applying for a job and someone from the company says: \u0026ldquo;I recommend this person and here\u0026rsquo;s why\u0026rdquo;, it\u0026rsquo;s a no-brainer. It\u0026rsquo;s just human psychology, right? They know you\u0026rsquo;re endorsed by someone whose opinion they value.\nPut yourself out there. Get feedback. Help others. Become the person who is recommended.\n To wrap up, here are a few things I\u0026rsquo;d suggest:\n Are you in touch with your coworkers/managers from your previous job? Could you ask them to write you a letter of recommendation or something? I\u0026rsquo;d start there. On the hexdevs blog, we\u0026rsquo;ve written a few posts on our philosophy on practicing for technical interviews:  Dev With No Experience? Here\u0026rsquo;s one way to get experience today. - there\u0026rsquo;s a list of Ruby projects to volunteer. How to Build a Developer Portfolio And Be Stuck Forever    Look around to see how people who are doing what you want to be doing did it. Get out of your own head and start doing something, particularly something that scares you. That\u0026rsquo;s a good sign you\u0026rsquo;re going to grow out of it.\n Did you like this article? Then you're gonna love these other ones:\n  Dev With No Experience? Here\u0026rsquo;s one way to get experience today.   The Unstuck Guide for Self-Taught Developers   Get unstuck on your coding exercise with Just One Exercise   ","permalink":"https://www.stefannibrasil.me/posts/early-career-ruby-dev-interviews/","summary":"I know how hard it is to give everything you got for job interviews only to be rejected every time. It\u0026rsquo;s so hard to keep going because every time you get a rejection, it makes you doubt if you\u0026rsquo;re a good developer. In my experience, the feeling of not being a good developer never goes away. It\u0026rsquo;s something worth learning how to handle so it doesn\u0026rsquo;t keep sabotaging you.\nTruly said, nobody wants to hire people with less than 3-5 years of experience.","title":"An open letter to someone who's received lots of rejections"},{"content":"What differentiates perfectionism from excellence? I only learned the difference recently.\nReading this quote from the book \u0026ldquo;Work Clean: The life-changing power of mise-en-place to organize your life, work, and mind\u0026rdquo;, changed how I approached my work.\nI used to feel proud by saying I was a perfectionist. That meant months, years of planning every single detail of everything. Setting the stakes higher as time went by.\nPerfectionism is a great excuse for trying to control the results. Nothing more. Excellence, on the other hand, is quality delivered:\n Excellence is not about creating something of the highest quality, it\u0026rsquo;s delivering something of the highest quality, with all the constraints that delivery entails — deadlines, expectations, contingencies, feedback. For the chef, the deadline is integral to quality. Without delivery, there\u0026rsquo;s no feedback, severing the improvement loop that creates excellence. Excellence is quality delivered \u0026ndash; Dan Charnas on Work Clean.\n Quality delivered + feedback is how you become excellent. Perfecting a project is not perfection. Is whatever you fear holding you back.\nExcellence is quality delivered.\nWant to write? Write! Want to code? Code! Want to give a talk? Give a talk!\nThat\u0026rsquo;s how you achieve excellence.\n Did you like this article? Then you're gonna love these other ones:\n  The 3 Things That Improved My Online Writing Process After Reading \u0026lsquo;The Art And Business Of Online Writing\u0026rsquo;   ","permalink":"https://www.stefannibrasil.me/posts/notes/work-clean-mise-en-place/","summary":"What differentiates perfectionism from excellence? I only learned the difference recently.\nReading this quote from the book \u0026ldquo;Work Clean: The life-changing power of mise-en-place to organize your life, work, and mind\u0026rdquo;, changed how I approached my work.\nI used to feel proud by saying I was a perfectionist. That meant months, years of planning every single detail of everything. Setting the stakes higher as time went by.\nPerfectionism is a great excuse for trying to control the results.","title":"The One quote from 'Work Clean' to deliver excellence as a Creator"},{"content":"Hi, welcome! The posts under \u0026ldquo;/notes\u0026rdquo; are just that: notes about things I\u0026rsquo;ve read or watched. I used to just write them for myself. I figured sharing them is more helpful than keeping them just to myself. Enjoy!\n Sharing a few notes about Imposter Syndrome based on the work of Dr. Vanessa Bohns and Dr. Randy Patterson.\nThe Science of Influence   I finished watching this interview with Dr. Vanessa Bohns. Here\u0026rsquo;s what I learned:\n When we focus too much on our insecurities, we hyper-focus on our inadequacies. The only person in the room focusing on our inadequacies is\u0026hellip; ourselves. We all have an \u0026ldquo;invisible audience\u0026rdquo; that we influence without realizing it. That means, what you share is being perceived by others, even if they don\u0026rsquo;t react to it. To get what you want, you need to be direct and along the lines of “Here’s what I’d like and why”. Most people are happy to accept your requests. I recently reached out to 15 people after watching this interview. And yeah, I didn’t think a single one would, and 10 of them said yes! Impostor Syndrome\u0026rsquo;s reframing: you\u0026rsquo;re feeling like an impostor because you\u0026rsquo;re doing new things! You\u0026rsquo;re walking with great people. It\u0026rsquo;s no surprise you feel that you don\u0026rsquo;t know anything. We are naturally inclined to navigate towards the negative. We think others don\u0026rsquo;t like us. We underestimate the positive effect we have on people. We\u0026rsquo;re wrong most of the time. Assuming and guessing what other people think, or how they will react to a request, are recipes for dissatisfaction. If you’re not sure about something, ask. By doing that, you avoid jumping to assumptions, and other people will appreciate your caring. We are bad guessers and we tend to focus on the negative. Knowing this, I started noticing when I was doing that and challenged myself to focus on the positive instead. If I have no idea what others are thinking (unless I ask), why not think the best of them or the situation?  I love this reframing about Imposter Syndrome. Of course, the anxiety it gives us can be paralyzing. But here’s something interesting about it: it means you’re doing something new and exciting.\nHow to be Miserable: Fear Imposter Syndrome   I love this short video on Imposter Syndrome from Dr. Randy Patterson.\nMy favorite quotes:\n\u0026ldquo;That feeling of being an impostor is just you perceiving reality. If it\u0026rsquo;s your first time doing something, how are you supposed to know?\u0026rdquo;\n\u0026ldquo;You\u0026rsquo;re not being paid to be comfortable\u0026rdquo;.\nImagine you never did anything new with your life. You do the same thing, over and over. There wouldn’t be ever a place for impostor syndrome because you’re a master at doing the same thing all the time.\nBetween us, that would be fucking boring. I can\u0026rsquo;t be doing the same thing for more than one year. That might explain why I struggled so much with Imposter Syndrome in my life ;)\nAs we grow up, we learn that most of our fears are completely imaginary (they might have been caused by real situations in the past, though). But the way we experience the world is directly shaped by our thoughts and feelings, not the other way around.\nIf you go do something thinking you’re going to be awful, then guess what, you will. Everything will prove your inadequacy.\nYou only get out of your comfort zone when staying there is more painful than getting out of it. There’s no room for growth if you never decide to figure out what’s out there for you.\nBy the way, we interviewed him at the hexdevs podcast about this topic. Check it out!\nClosing notes Of course, feeling like an impostor every day will cause you lots of trouble. I say this from my experience. I became so hyper-focused on what I didn’t know that I burned out. All that energy was invested in feeling like I didn’t belong and trying to hide my insecurities.\nNext time you notice the Imposter Syndrome kicking in (bookmark this post so you don’t forget), reframe it. If you can’t do it on your own, I recommend learning more about Cognitive distortions. Ignoring your problems will bring more problems. They won’t simply go away.\nI hope any of this is helpful to you. I will see you on the other side of your fear.\n Did you like this article? Then you're gonna love these other ones:\n  2024: reflections on the moral obligations of being a better person   Asking for Help Can Be Hard \u0026ndash; Here is How to Make it Easier   My Experience With Anxiety, Depression, Therapy and Taking Anti-Depressants   ","permalink":"https://www.stefannibrasil.me/posts/notes/imposter-syndrome/","summary":"Hi, welcome! The posts under \u0026ldquo;/notes\u0026rdquo; are just that: notes about things I\u0026rsquo;ve read or watched. I used to just write them for myself. I figured sharing them is more helpful than keeping them just to myself. Enjoy!\n Sharing a few notes about Imposter Syndrome based on the work of Dr. Vanessa Bohns and Dr. Randy Patterson.\nThe Science of Influence   I finished watching this interview with Dr.","title":"Imposter Syndrome? You're doing better than you think."},{"content":"Hello, welcome to my Speaking page! Here you can find more details about the topics I enjoy talking about.\nSpeaking Topics  Testing best practices for Ruby devs Open Source contribution Deliberate Technical Practice Communication Skills for Software Developers Career Growth for Experienced Software Developers  Check out my Talks, Podcasts and Papers section.\nInvite Stefanni to Speak If you are in interesting in having me as a guest speaker at your meetup or conference, please send the following details to stefanni at hexdevs dot com:\n Proposed Event Date Event Description Event Location Expected Number of Attendees  See you.\n","permalink":"https://www.stefannibrasil.me/speaking/","summary":"Hello, welcome to my Speaking page! Here you can find more details about the topics I enjoy talking about.\nSpeaking Topics  Testing best practices for Ruby devs Open Source contribution Deliberate Technical Practice Communication Skills for Software Developers Career Growth for Experienced Software Developers  Check out my Talks, Podcasts and Papers section.\nInvite Stefanni to Speak If you are in interesting in having me as a guest speaker at your meetup or conference, please send the following details to stefanni at hexdevs dot com:","title":"Speaking"},{"content":"You\u0026rsquo;re focusing on finding that first Ruby job. You\u0026rsquo;ve been practicing for months or years. You\u0026rsquo;ve been applying to entry-level jobs, even internships.\nYou polish your resume. Tweak your portfolio. Attach your CV. Press Submit.\nChirp, chirp, chirp 🦗\nNothing happens.\nWorse: you do an amazing interview, people loved you. But then they say they are moving forward with someone else that has more experience.\nWelp, next time is going to be different. Keep hoping for the best.\nYou ask yourself: \u0026ldquo;Should I just keep practicing and building my portfolio?\u0026rdquo; 🤔\nThat may sound like a good idea. After all, no one will say no to you when you show your perfect portfolio that you\u0026rsquo;ve been crafting for the past months, right?\nWrong.\nWhen you get a no and people say you don\u0026rsquo;t have experience, they are mostly asking themselves this question:\n Are you recommended by someone I know?\n It\u0026rsquo;s just how humans work. We are wired to confirm our biases. We don\u0026rsquo;t like uncertainty and unfamiliarity.\nIf you look closely, there are people out there getting jobs without experience. Some of them are far less skilled than you. Lack of experience is not the only problem.\nBut what else can you do to get experience and recommendations for your first Ruby dev job?\nDid you ever think about getting experience by doing volunteer work? I know, working for free doesn\u0026rsquo;t sound good.\nBut your current strategy sucks. You\u0026rsquo;re still reading this post because you are not sure what else you can do. Deep inside, you know just practicing isn\u0026rsquo;t the answer.\nBy the time you get to the end of this post, you\u0026rsquo;ll know how to get out of the Dev With No Experience Roller Coaster™ by strategically doing volunteer work.\nGet real-world experience with volunteer work  \u0026ldquo;Volunteer work is one of the best ways there is to get your feet wet and gain experience in a new field. You don’t need credentials or prior experience. You don’t have to pay them a cent for your training. [\u0026hellip;] Volunteer work is the great cure for the classic vicious cycle, \u0026lsquo;Can’t get experience without a job; can’t get a job without experience.' If you think unpaid experience doesn’t count on a resume, think again. Experience is experience.\u0026rdquo; \u0026mdash; Wishcraft, by Barbara Sher. Unfortunately, not everyone has the privilege of working without getting paid. Therefore, this strategy doesn\u0026rsquo;t work for everyone.\nBut if you\u0026rsquo;ve been investing your time and resources into practicing your coding skills by doing one workshop/course/tutorial after another, then you do have the time and resources to get real-world experience by doing volunteer work.\nIt\u0026rsquo;s not that investing in Education is bad! Improving your skills is necessary and will get you further. Study and also volunteer.\nI\u0026rsquo;ve heard countless examples of people that were offered great opportunities after they have done volunteer work. One of my first job opportunities came from volunteering to be a coach at a Rails Girls workshop. I also volunteered for non-profit projects.\nWhen you\u0026rsquo;re a helpful, reliable, and motivated person, people will trust and advocate for you. You might not even need to apply for jobs. People will want to work with you because you have experience helping others.\nEverything you don\u0026rsquo;t get by building yet another project and practicing your coding skills in the controlled environment you\u0026rsquo;re trapping yourself in.\nHow to get started with volunteering Don\u0026rsquo;t know any organizations/projects that you can reach out to get started? I didn\u0026rsquo;t as well! I asked some friends around and I got this list for you:\n  Contribute to an open-source project. I\u0026rsquo;ve heard good things about CASA;\n  Build an app for a project in your local community;\n  Volunteer at non-profits. These are great ones to help you get started:\n Ruby for Good - A non-profit organizations to build an inclusive technology community, and provide technology-focused educational opportunities to underserved communities; MPKAT - A not-for-profit diversity community initiative. They provide a network for growth and healing through resources, discussion, supportive relationships, and opportunities; Tech for Good - In general, lots of communities called \u0026ldquo;tech for good\u0026rdquo; are a good place to start. Code for America - Each city has brigades of people with a range of skills, and they organize those people to work on software/tools to benefit civic/nonprofit orgs in that city; Code for Philly - Code for Philly is a very successful brigade from a larger organization called The Brigade Network.    Ask around and you will find out people who successfully followed this strategy. Study their trajectory and follow their steps. I\u0026rsquo;m happy to chat, if you want!\n  Note: if you notice that you are taking a long time choosing one from the list, set a 15min timer to make a decision. It\u0026rsquo;s not important that you find the perfect one for you. Just get started. See how it goes. If it doesn\u0026rsquo;t work out, try another one. You\u0026rsquo;ll get confidence by taking action, not by overthinking. Deal? 🙋‍♀️\nAnother note: Keep in mind that it\u0026rsquo;s possible that people have expectations that you know how solve most of the problems on your own. Everyone is probably solving their own problems and that requires too much already. That doesn\u0026rsquo;t mean you should know how to solve them, though. You\u0026rsquo;re learning and having support is part of the process. Make sure to find a group that can help you along the way. It\u0026rsquo;s okay to ask for help \u0026lt;3\n Let\u0026rsquo;s be clear: no strategy can guarantee you a job. There is no guarantee for anything. But if you want to get different results and maximize your opportunities, then volunteering is a great way to build your new career.\nMeet people that will advocate for you. Meet people that you can help with the skills you have to create valuable work. Show the world what you got.\nTo quote Barbara Sher (again):\n Volunteering is one of the best ways to get out there now.\n Get out there. Help someone by volunteering your time and skills and start making things happen for you.\nYou got this 💪.\nPS. Thanks Sarah Eggleston, Alex Hillman and Ben Novack for suggesting some of the organizations included in this post. If you\u0026rsquo;d like to suggest one, please reach out to me ^.^\n Did you like this article? Then you're gonna love these other ones:\n  An open letter to someone who\u0026rsquo;s received lots of rejections   The Unstuck Guide for Self-Taught Developers   Get unstuck on your coding exercise with Just One Exercise   ","permalink":"https://www.stefannibrasil.me/posts/first-ruby-dev-job-no-experience/","summary":"You\u0026rsquo;re focusing on finding that first Ruby job. You\u0026rsquo;ve been practicing for months or years. You\u0026rsquo;ve been applying to entry-level jobs, even internships.\nYou polish your resume. Tweak your portfolio. Attach your CV. Press Submit.\nChirp, chirp, chirp 🦗\nNothing happens.\nWorse: you do an amazing interview, people loved you. But then they say they are moving forward with someone else that has more experience.\nWelp, next time is going to be different.","title":"Dev With No Experience? Here's one way to get experience today."},{"content":"  \nWhen you get stuck, it’s really easy to block yourself from creatively solving your problem.\nYou start asking \u0026ldquo;why am I so dumb?\u0026rdquo;, or thinking that you don’t have a programmer\u0026rsquo;s brain, or feeling that you’ll never understand anything.\nHow is that helpful? It isn’t.\nThe way we talk to each other (even to ourselves) impacts our performance. It’s not self-help BS. It’s how our brain works.\nAs Dr. Lisa Feldman Barrett, one of my favorite neuroscientists, shows in this short video, \u0026ldquo;The Power of Words is in the wiring of your brain\u0026rdquo;:\n   You see, transitioning into tech is going to take more than just improving your coding skills.\nAs a self-taught developer, you also need to learn how to learn and to manage the hard times.\nThe purpose of this guide is to help you use your determination to build up a ladder you can climb instead of digging yourself into a hole 🕳️.\nLet\u0026rsquo;s learn how!\nThe Unstuck Guide for Self-Taught Developers These Thoughts and Questions will help you re-frame your perspective when you\u0026rsquo;re feeling in a rut on your coding journey.\nHere is how it works:\nThe ❌ is the Negative inner voice that doesn\u0026rsquo;t help you. It\u0026rsquo;s a sign it\u0026rsquo;s time to change your perspective.\nThe 💭 is a Thought to help you see things from a different perspective. Our brains are really good at making us believe that what we feel and think is true, even when it\u0026rsquo;s not.\nThe ❔ are open-ended Questions that can help you get closer to a solution.\n ❌ I am so dumb.\n💭 I\u0026rsquo;m not the only one struggling to transition into tech. I am doing what I can!\n❔ Is this how I want to be feeling? What can I learn from this situation?\n ❌ I will never understand any of this.\n💭 Feeling frustrated is natural. I can choose to see this as an opportunity to develop my problem-solving skills.\n❔ What am I missing? Who can I reach out to and ask for help?\n ❌ I don\u0026rsquo;t know enough to figure out what\u0026rsquo;s going on.\n💭 I\u0026rsquo;m learning and I\u0026rsquo;m getting better every day. Figuring things out is part of the journey.\n❔ What makes more sense to do now? What questions can I ask?\n ❌ I\u0026rsquo;m so slow at coding. Everyone else is faster than me.\n💭 There\u0026rsquo;s no way I can know for a fact how other people are doing. Everyone is different and has their own pace.\n❔ What assumptions am I making?\n ❌ I\u0026rsquo;m not good enough at programming.\n💭 I am good enough. This is a moment of frustration and I choose to take care of myself.\n❔ How else can I think about my coding journey?\n ❌ I will never get an early career developer job.\n💭 It\u0026rsquo;s a tough market out there for anyone without experience. Even experienced developers are getting rejected.\n❔ What is possible? What are my choices?\n  The Unstuck Guide for Self-Taught Developers   Get the byte-sized version 👈\n Next time you feel like you can\u0026rsquo;t see a solution for your problem, go through the Thoughts and Questions from this guide. Bonus points if you go through this guide after you take a mental break 🧠.\nLearning how to develop a growth mindset will make a big difference. That\u0026rsquo;s what I wanted someone had told me when I was transitioning to tech. Now, I want to be that person for you 🌱.\nBookmark this post, print your Cheat Sheet and share it with your friends that need to read this ⭐.\n Did you like this article? Then you're gonna love these other ones:\n  An open letter to someone who\u0026rsquo;s received lots of rejections   Dev With No Experience? Here\u0026rsquo;s one way to get experience today.   Get unstuck on your coding exercise with Just One Exercise   ","permalink":"https://www.stefannibrasil.me/posts/unstuck-guide-self-taught-devs/","summary":"When you get stuck, it’s really easy to block yourself from creatively solving your problem.\nYou start asking \u0026ldquo;why am I so dumb?\u0026rdquo;, or thinking that you don’t have a programmer\u0026rsquo;s brain, or feeling that you’ll never understand anything.\nHow is that helpful? It isn’t.\nThe way we talk to each other (even to ourselves) impacts our performance. It’s not self-help BS. It’s how our brain works.","title":"The Unstuck Guide for Self-Taught Developers"},{"content":"You\u0026rsquo;re working on your coding project. Everything is going well.\nBut it doesn\u0026rsquo;t take too long until you get stuck on your assignment. You try everything you possibly can, with the resources you have.\nYou are mixing Ruby, JavaScript, Postgres. Doing crash courses, googling. You go to the docs but you don\u0026rsquo;t even know where to look. It\u0026rsquo;s almost as if it\u0026rsquo;s a foreign language.\nOn StackOverflow, you see the same tips over and over. You\u0026rsquo;ve tried them all so many times you\u0026rsquo;re sure you didn\u0026rsquo;t miss them.\nNothing helps. And you know you tried everything. You tried different paths just to get stuck in the mud. Arrggggh.\nIt\u0026rsquo;s as if you\u0026rsquo;re driving somewhere. You want to set the destination on your GPS. But you don\u0026rsquo;t even know the name of the place you\u0026rsquo;re going. Everybody speaks another language and there is no map.\nYou start going through a crisis. That one that almost convinces you that quitting it all together and moving on is better 😔.\nYep, that sucks.\nWhen you reach that level of frustration, continue focusing on the problem will do more harm than good. It\u0026rsquo;s time to try something else.\nHere\u0026rsquo;s the thing: getting stuck is human. As Einstein once said:\n We cannot solve our problems with the same thinking we used when we created them.\n But that doesn\u0026rsquo;t mean you\u0026rsquo;ll be stuck forever. By the end of this post, you\u0026rsquo;ll learn one simple exercise for you to develop problem-solving skills for your coding career (and for life).\nWhen you\u0026rsquo;re stuck, switch your focus. Let\u0026rsquo;s get this straight: getting stuck sucks. But it\u0026rsquo;s part of life.\nHere are some tips to help you cool down and see things from a different viewpoint:\n Switch your focus entirely. If you are really tired, go for a walk. Do something else. No multi-tasking! When you feel refreshed, draw a map of your problem. Yep, pen and paper ✍️!  Then, ask yourself these questions:\n Where do you want to go? Where are you now? What is the next single step to get closer to your destination?  Coding is not straightforward and you can get stuck in the first step of a tutorial (been there, done that).\nIt\u0026rsquo;s okay to struggle\u0026hellip; because if you already knew all of this stuff, why would you need to learn them?\nThat’s the growing pain of navigating unknown territories. You\u0026rsquo;ve got to beat your own path and explore. Draw your own map as you go 🧭.\n Enjoy the journey while getting to your destination. And if you don\u0026rsquo;t finish your assignment or task, it\u0026rsquo;s okay. You always get to try again, my friend 💫.\nRemember that exploring with a group is easier. Others might have explored more and can teach you a thing or two. Check out CodeBuddies and CodeNewbies.\nBookmark this post for the next time you get stuck and share it with your friends!\n Did you like this article? Then you're gonna love these other ones:\n  An open letter to someone who\u0026rsquo;s received lots of rejections   Dev With No Experience? Here\u0026rsquo;s one way to get experience today.   The Unstuck Guide for Self-Taught Developers   ","permalink":"https://www.stefannibrasil.me/posts/stuck-on-programming-problem/","summary":"You\u0026rsquo;re working on your coding project. Everything is going well.\nBut it doesn\u0026rsquo;t take too long until you get stuck on your assignment. You try everything you possibly can, with the resources you have.\nYou are mixing Ruby, JavaScript, Postgres. Doing crash courses, googling. You go to the docs but you don\u0026rsquo;t even know where to look. It\u0026rsquo;s almost as if it\u0026rsquo;s a foreign language.\nOn StackOverflow, you see the same tips over and over.","title":"Get unstuck on your coding exercise with Just One Exercise"},{"content":"You got that first job as an early career software engineer after a long job hunt. You are ready to learn a lot and advance in your career.\nMost times you\u0026rsquo;re fine, but sometimes you worry that you don\u0026rsquo;t contribute much value to your team. That you ask stupid questions all the time. Or that you don\u0026rsquo;t have the domain-specific knowledge required to estimate tickets accurately or to handle bugs quickly.\nDo you think that you slow your team down?\nEven though you\u0026rsquo;ve had a career in something else and you were very proficient at it, you are not feeling like a team player at your new job.\nHere\u0026rsquo;s another way to look at this: if you\u0026rsquo;re always learning and helping your team, you are contributing positively.\nThe truth is I\u0026rsquo;ve met lots of \u0026ldquo;senior\u0026rdquo; devs who didn’t contribute positively to the team. Their effect was quite negative, to be honest. They are still in the industry getting a senior salary and not having a single doubt about their skills.\nWhat you lack is mainly self-confidence. Well, here\u0026rsquo;s some good news: self-confidence is also a skill and as such, can be learned.\nBy the end of this post, you\u0026rsquo;ll learn four tips for developing more confidence in your skills, feel the impact of your work, and be respected by your teammates.\n1. Test the assumptions your team has It\u0026rsquo;s not only because you have fresh eyes on the code. It\u0026rsquo;s also because you\u0026rsquo;ll be stressing out the current implementation. Reading things for the first time will surface a lot of unclear business domain logic.\nGet pen and paper and take notes of your detective work. Go through the app and make a note of what you are not sure about.\n What is new to you? What is surprising? What seems odd?\n How are the tests written? Do they even have a test suite? Why not?\nAsk questions. First, to yourself. Make sure to go through them in your head and explain the problem to yourself. Often, this will answer your questions and improve your problem-solving skills.\nIf that doesn\u0026rsquo;t work, ask a teammate. It\u0026rsquo;s always good to explain what you\u0026rsquo;ve tried, what you are trying to achieve, and where you are stuck.\nIf you\u0026rsquo;re afraid to ask, know that people who ask good questions are better teammates than people who only give answers their criticism.\nThen, propose changes. If you feel that the team would be open to tiny changes without a discussion, go ahead. Otherwise, say what your proposed alternative is and implement them in the following days.\n2. Improve documentation and communication processes You might have heard that improving documentation and processes are \u0026ldquo;soft skills\u0026rdquo;. I have only heard this from people that don\u0026rsquo;t care about communication or teamwork. I wouldn\u0026rsquo;t trust their advice.\nA few ideas are:\n Create some PR templates for your team GitHub actions to automate some repetitive tasks, like running the test suite on CI. Dashboard that automates something your team is doing manually because no one has time to do them Improve the onboarding experience  What can you apply from your past experiences in your new job? Do you see an opportunity to take advantage of your experience? 💭\nThere are tons of ways you can use your coding skills to help your team 🌠.\n3. Automate a tedious/repetitive routine If you\u0026rsquo;re working in a team, you\u0026rsquo;re probably interacting with QA\u0026rsquo;s, Product Managers, etc. Do you see any opportunities for helping them?\nMaybe a script that helps them review things more accurately, or an automated test so they don\u0026rsquo;t have to remember testing everything manually?\nA business is always looking for ways to cut down expenses or time :)\nOh, don\u0026rsquo;t forget to log all your initiatives and improvements for next time the self-doubt kicks in and you want to show them you\u0026rsquo;re not an impostor. Plus, it will be useful when you\u0026rsquo;re negotiating your next promotion 😉.\nNote that you\u0026rsquo;re not expected to fix or automate everything. The way to look at this is to ask yourself: is there a framework for making better decisions that you have used in the past?\n4. Continue investing in self-education Most companies are willing to support you paying for Education. I mean, why wouldn\u0026rsquo;t they?\nDo you have an idea of how to improve a module or a class but you\u0026rsquo;re afraid to do so because the code is obscure and you are afraid to break things? Or do you have an idea of how to do something better but you don\u0026rsquo;t know how to get started by yourself?\nFind the person in the team who likes to see you growing and spend more time with them. If there isn\u0026rsquo;t such a person in your company, find them somewhere else.\nYou\u0026rsquo;ll learn a lot on the job but depending on the company or team, you might learn only bad practices. Don\u0026rsquo;t be stuck for years doing what you are doing. Instead, invest in advancing your skills.\nAlways have an escape plan. There\u0026rsquo;s no better plan than investing in yourself.\nAlternatively, you can do self-paced training at work every day. Block a 30min event on your calendar to be your first task in the day. You can use this time to improve your coding, testing, or debugging skills.\n I hope that by now, you\u0026rsquo;ve realized that your worthiness is not directly related to how much code you write. And you know it\u0026rsquo;s not always about the code. And that technical skills can be learned because you just did that.\nIf they hired you, it\u0026rsquo;s because they want you to be part of the team. You may be the one setting too high expectations for yourself.\nIf you found these tips helpful, share this post with your friends!\nYou got this. I\u0026rsquo;m rooting for you.\n Did you like this article? Then you're gonna love these other ones:\n  An open letter to someone who\u0026rsquo;s received lots of rejections   Dev With No Experience? Here\u0026rsquo;s one way to get experience today.   The Unstuck Guide for Self-Taught Developers   ","permalink":"https://www.stefannibrasil.me/posts/contribute-team-early-career-software-engineer/","summary":"You got that first job as an early career software engineer after a long job hunt. You are ready to learn a lot and advance in your career.\nMost times you\u0026rsquo;re fine, but sometimes you worry that you don\u0026rsquo;t contribute much value to your team. That you ask stupid questions all the time. Or that you don\u0026rsquo;t have the domain-specific knowledge required to estimate tickets accurately or to handle bugs quickly.","title":"Worried you don't contribute to your team as an early career software engineer?"},{"content":"You show your GitHub project to people but they don\u0026rsquo;t understand what the code is about. Why should you take time to write a good README if they can simply \u0026ldquo;read the code\u0026rdquo;?\nThey won\u0026rsquo;t even look at your code if you don\u0026rsquo;t explain what\u0026rsquo;s in it for them. Why should anyone care about it?\nWhat about making them curious about your project? It saves them time, it shows you care about good communication and that by writing good docs you probably write good code as well.\nIn the end, we write code for humans 😉.\nBy the end of this post, you\u0026rsquo;ll know how to:\n Write simple yet useful READMEs for your GitHub projects. How to improve your chances of making a good impression next time you send a potential employer a link to your GitHub portfolio.  It may seem too much to learn and you\u0026rsquo;ll probably feel overwhelmed. Use this as a reference and do the homework. That\u0026rsquo;s a good starting point.\nLet\u0026rsquo;s get started!\nImprove your GitHub profile Start by doing an \u0026lsquo;audit\u0026rsquo; on your profile:\n  It\u0026rsquo;s a good idea to have a repository for each project. Your GitHub profile becomes a portfolio by itself. Add a personal README and up to 4 projects that you want people to see first. See my GitHub README as an example.\n  Write about you in your user section. Tip: instead of adding \u0026ldquo;I\u0026rsquo;m a early career developer looking for opportunities\u0026rdquo;, use powerful words that describe your skills. For example: \u0026ldquo;I help charities make data-driven decisions with Ruby\u0026rdquo;.\n  Position yourself as someone who provides value and not someone learning how to code. You\u0026rsquo;ll always be learning. Drive the focus to the value you generate instead.\nHow to write a good README Let\u0026rsquo;s say you need to run this project on another computer. Would you know all the steps needed to install it again? Which files to look at first? Probably not.\nAsking yourself questions like this one help you connect more with your users. Put yourself in their shoe\u0026rsquo;s and avoid jumping to conclusions.\nDo they know which commands to run on the terminal? How to navigate through the project\u0026rsquo;s folders? What do they need to know about your project?\nEven if they have experience with the programming language, they may have forgetten how to run commands. Readers from all levels will be able to appreciate your work. Including your future self.\nThe \u0026lsquo;How to Get Started\u0026rsquo; section The How to Get Started section tells the user which commands they will run and anticipate any dependencies they need to install first.\nHere\u0026rsquo;s an example of a How to Get Started section for a Rails app:\nThis project depends on libexif. If you're on a mac, run `brew install libexif` to install it. Run `git clone my_github_project` to clone the project. Run `cd my_github_project \u0026amp;\u0026amp; bin/setup` to install dependencies. Then, run `rake install` to install this gem onto your local machine. Run `app export` to generate a CSV file with the Exif data. Run `cat output/*.*`. If you see a list of files, this means your setup is correct. If relevant, add code snippets or images. Check out Carbon for creating awesome code snippets. Show, don\u0026rsquo;t tell.\nBonus tip: uninstall the project and go through the process of installing it again. If you had problems with one command, add \u0026ldquo;If you run into this error, run this command\u0026rdquo;.\nHomework: Write a Badass README  Choose one of your projects. Use this README checklist as a template. Review your README using the questions proposed on Tips for writing a good README. Congratulate yourself for developing a new skill 🥳.  Good companies value good communication. I\u0026rsquo;ll never forget when the CTO of my first internship said: \u0026ldquo;you write well, that\u0026rsquo;s a good indicator that you have the skills to write good code, too\u0026rdquo;. It opened my eyes to how much communication skills matter.\nWrite good docs, write good code, make your readers happy. See you next time 👋.\n Did you like this article? Then you're gonna love these other ones:\n  An open letter to someone who\u0026rsquo;s received lots of rejections   Dev With No Experience? Here\u0026rsquo;s one way to get experience today.   The Unstuck Guide for Self-Taught Developers   ","permalink":"https://www.stefannibrasil.me/posts/github-readme-examples-and-template/","summary":"You show your GitHub project to people but they don\u0026rsquo;t understand what the code is about. Why should you take time to write a good README if they can simply \u0026ldquo;read the code\u0026rdquo;?\nThey won\u0026rsquo;t even look at your code if you don\u0026rsquo;t explain what\u0026rsquo;s in it for them. Why should anyone care about it?\nWhat about making them curious about your project? It saves them time, it shows you care about good communication and that by writing good docs you probably write good code as well.","title":"How to write Badass READMES for your Github projects"},{"content":"Let\u0026rsquo;s say you\u0026rsquo;re learning how to paint. When you look at the famous paintings at the museum, you might start asking yourself:\n\u0026ldquo;Will I ever be this good? Is this for me? Will I ever get to paint something like this?\u0026rdquo;\nIf these questions sound familiar, it\u0026rsquo;s because you\u0026rsquo;re not alone. It\u0026rsquo;s not just you.\nThe same questions can be applied to coding. Some things, like painting and learning how to code, are hard.\nIn case you need a boost of inspiration and to be reminded that it\u0026rsquo;s possible to make it happen, here\u0026rsquo;s a list of a few successful Rails developers that come from unusual backgrounds.\nEileen Utchichetlle How many photographers do you know that have turned out to be developers? Eileen is one of them! She has a BFA in Photography and she worked on magazine layout, email marketing, as well as editing as a Production Designer for 2 years before she decided to change her career.\nShe\u0026rsquo;s now a Principal Software Engineer at GitHub. She\u0026rsquo;s also a member of the Rails Core Team and the Rails Security Team.\nEileen has given lots of talks and keynotes, despite being afraid of public speaking!\nAndromeda Yelton Andromeda is a librarian and technologist. She used to work as a math major and a middle school Latin teacher. Eventually, she got a library degree and ended up working in a library technology startup.\nShe transitioned into web development by doing software contract work (Python/Django) to help librarians learn to code through teaching, speaking, and writing.\nShe\u0026rsquo;s now a full-time software engineer, building things that empower people through code. She inspires others to combine their skills to bring more perspectives to the software world.\nLovisa Svallingson (in memoriam) This is how Lovisa described her skills:\n\u0026ldquo;With a background in languages, working with people, and various creative endeavors, I bring a unique and well-rounded perspective to the work I do\u0026rdquo;.\nLovisa\u0026rsquo;s background was in languages and she was an English teacher. Later on, she attended the Turing School of Software and Design.\nLovisa passed away and I want to dedicate this post in her honor. She was a Bootcamp graduate\u0026rsquo;s Advocate and she wanted to help more people who are transitioning into tech, just like you.\nMay her time here on Earth be an example that your diverse background is your strength.\nDr. Barbara Oakley Note: cheating a bit here because Dr. Oakley is not a Rails developer but consider this a bonus material :)\nDr. Barbara has a B.A. in Slavic Languages and Literature. Later on, she decided to study Engineering.\nShe has written lots of books about how to learn effectively, all backed up by Neuroscience. She is the creator of the most famous MOOC free course called Learning how to Learn.\nShe\u0026rsquo;s an advocate of having multiple backgrounds as it can give you more insights on your new journey.\nChanging careers signals that you\u0026rsquo;re constantly learning new things! It\u0026rsquo;s an example that learning is part of your lifestyle. You\u0026rsquo;re being mentally flexible.\n What do they all have in common? They all started somewhere and they embraced their diversity. I\u0026rsquo;m pretty sure they once felt the same as you.\nTake a deep breath now. The world is big enough for your ambitions, keep going!\nI highly recommend you watching this amazing Ted Talk from Amy Cuddy called Your body language may shape who you are. Go check it out.\nI hope you\u0026rsquo;re feeling a bit more relaxed and inspired! Feel free to bookmark this post for these days when you need some inspiration again, and share it with your friends ✨.\n Did you like this article? Then you're gonna love these other ones:\n  An open letter to someone who\u0026rsquo;s received lots of rejections   Dev With No Experience? Here\u0026rsquo;s one way to get experience today.   The Unstuck Guide for Self-Taught Developers   ","permalink":"https://www.stefannibrasil.me/posts/examples-successful-self-taught-developers/","summary":"Let\u0026rsquo;s say you\u0026rsquo;re learning how to paint. When you look at the famous paintings at the museum, you might start asking yourself:\n\u0026ldquo;Will I ever be this good? Is this for me? Will I ever get to paint something like this?\u0026rdquo;\nIf these questions sound familiar, it\u0026rsquo;s because you\u0026rsquo;re not alone. It\u0026rsquo;s not just you.\nThe same questions can be applied to coding. Some things, like painting and learning how to code, are hard.","title":"Examples of Successful Self-Taught Developers"},{"content":"\u0026ldquo;Why is it so difficult to find Junior Ruby on Rails dev roles?\u0026quot;\nYou have finished multiple online courses, workshops and might even read some books to learn Ruby. You start job hunting and you struggle to land a position because of your lack of experience.\nSo how do you get experience with large Ruby and Rails apps when no one wants to hire early-career devs?\nIt\u0026rsquo;s a tough market for any early-career dev with little to no experience, so it\u0026rsquo;s no different with Ruby. You\u0026rsquo;re not alone, my friend!\nIf you don\u0026rsquo;t know what else you can do besides doing another tutorial or starting another small Ruby project, here\u0026rsquo;s an idea for you: contribute to Rails.\n\u0026ldquo;Wait, what? Me? Contribute to Rails? I\u0026rsquo;m just starting my career!\u0026rdquo;\nI know. This is not usually recommended as a beginner-friendly open source project but here\u0026rsquo;s something you probably haven\u0026rsquo;t thought about yet.\nWhat if you learned Ruby on Rails from the source? Now that you have done tiny apps it\u0026rsquo;s time to try something different.\nRails can be daunting. It\u0026rsquo;s so abstract and complex. I feel the same!\nHowever, just by lurking around you\u0026rsquo;ll see how a large project is designed and maintained.\nThis might not seem like it\u0026rsquo;s important but you\u0026rsquo;ll be learning how to:\n read other people\u0026rsquo;s code; read documentation; write good documentation, commits, and Pull Requests; navigate in a large codebase; ask for and do code reviews; improve your communication skills (super important for remote jobs);  Believe it not, these things are what you\u0026rsquo;ll be doing most of the time as a developer.\nYou will have a better understanding of the tool you\u0026rsquo;re using every day. Can you imagine how cool it can be to use those skills on your projects? Interesting topics to discuss on interviews, huh?\nHow does this approach help me get a job? Although this won\u0026rsquo;t guarantee you\u0026rsquo;ll land a job soon, it certainly will help you develop competitive advantages. A few examples:\n Apply your lessons on your projects (great for your portfolio!); Write blog posts or present a talk teaching others how to understand a specific module; You will feel like a badass! Plus, it\u0026rsquo;s a way to show you have good initiative; Some companies allow skipping the whiteboard interview if you have interesting open-source contributions; You\u0026rsquo;ll be connected with more experienced/expert Ruby devs; You\u0026rsquo;ll be putting yourself out there instead of just learning on your own.  But first, you need to get started.\nHow to get started with contributing to Rails Go to the Rails GitHub repository. Choose one module. ActionPack, for example, is a good option because it doesn\u0026rsquo;t require any database drivers configuration.\nChoose one merged Pull Request (suggestions: this or this one) to get started. You probably won\u0026rsquo;t understand either of the PRs. Don\u0026rsquo;t panic, that\u0026rsquo;s expected! Keep reading.\nWhen you take a look at the PRs, you\u0026rsquo;re not expected to understand the changes. The goal is to ask yourself: Why were the changes were made? How did the author approach it? How was the code review given? Was the author a regular contributor? Did the issue have reproducible steps?\nWhat can you learn from it? Nothing is a valid answer although I\u0026rsquo;m pretty sure you at least learned that it\u0026rsquo;s not beginner-friendly. That\u0026rsquo;s something, right?\nYou can even go one step further: could you learn a thing or two about Ruby? Is it touching the controllers, the models, the views? What is the context?\nRinse and repeat until you feel like you\u0026rsquo;re starting to understand how things are done on the project. It\u0026rsquo;s going to take some time.\nEventually, you\u0026rsquo;ll feel more confident to work on an issue. However, when you go through the Rails documentation, you\u0026rsquo;ll know this is just one of many ways to contribute to the project 😉.\nBut Rails is scary! What if I get stuck all the time? It\u0026rsquo;s going to be difficult. Remember: Rails is super hard. But the goal is not to aim to understand it for now. The goal is to get familiar with large codebases, learning how to find yourself in a new codebase, seeing how people ask questions, give code reviews, reading the docs.\nThese are normal things you\u0026rsquo;ll do on the day-to-day as a developer. It\u0026rsquo;s a good opportunity to practice asking good questions and learn how to get unstuck. These are valuable skills for your career.\nGive it a try. Set an event on your calendar to do this for at least 1 hour every week. Write down your progress, celebrate every tiny lesson, and see what happens.\n Did you like this article? Then you're gonna love these other ones:\n  An open letter to someone who\u0026rsquo;s received lots of rejections   Dev With No Experience? Here\u0026rsquo;s one way to get experience today.   The Unstuck Guide for Self-Taught Developers   ","permalink":"https://www.stefannibrasil.me/posts/tech-job-hunt-with-no-experience/","summary":"\u0026ldquo;Why is it so difficult to find Junior Ruby on Rails dev roles?\u0026quot;\nYou have finished multiple online courses, workshops and might even read some books to learn Ruby. You start job hunting and you struggle to land a position because of your lack of experience.\nSo how do you get experience with large Ruby and Rails apps when no one wants to hire early-career devs?\nIt\u0026rsquo;s a tough market for any early-career dev with little to no experience, so it\u0026rsquo;s no different with Ruby.","title":"On the Job Hunt? Try this one thing to get experience as an early career Ruby dev"},{"content":"Now that all Rails Conf 2021 talks, keynotes and workshops are available on YouTube, you might be wondering which ones you should watch first.\nIf you are just getting started with your Rails or programming journey, here\u0026rsquo;s a list of 6 talks for you (with resources):\n1. Implicit to Explicit: Decoding Ruby\u0026rsquo;s Magical Syntax by Justin Gordon [Talk] Do you wish you could understand better what Rails does under the hood? This talk is a great reference for anyone starting with Ruby and Rails. Bonus: learn some Pry Debugger tips to help you demystify any Ruby code.\nSlides can be found here.\n2 Believe in the Rails Magic: Unlock the Power of Rails by Learn Academy [Workshop] Do you want to learn more about how does the MVC pattern work? Then this one if for you. You\u0026rsquo;ll create a simple CRUD app with a step by step guide on what which command is doing. You\u0026rsquo;ll learn how does the routes, controllers, views and models interact with each other.\nGithub repository can be found here and the slides here.\n3. Intro to Test Driven Development: How to Safely Make Changes by Zack Pieper [Workshop] Capybara? Rspec? Mini Test? What is the difference between them? Is the syntax making you feel confused?\nThen definitely follow along with this workshop. It\u0026rsquo;s a nice introduction to TDD and Rails testing in general.\nResources to follow along can be found here.\n4. Hotwire: HTML over the wire by Noel Rappin [Workshop] For Rails beginners, Hotwire is great because you can focus on improving your Rails skills without worrying too much about front end yet. For experienced Rails devs, Hotwire will make you feel less depressed about front-end.\nIn this workshop, you get to practice Hotwire by adding realtime frontend changes to a Rails app. You can find the code to follow along here.\nFor more on Hotwire, you might also want to check out Hotwire Demystified by Jamie Gaskins. This talk breaks down Hotwire basics, as well as the tradeoffs between SPAs and Hotwire.\n5. OAuth 2.0 Deconstructed by Peter Jang [Workshop] Did you ever wanted to understand OAuth better? Looking at the charts showing you all the callbacks and tokens going back and forward doesn\u0026rsquo;t help that much.\nThis workshop is a nice intro to OAuth behind the scenes. You will implement OAuth from scratch for several providers (Shopify and GitHub) on a Sinatra app.\nGithub repo to follow along can be found here.\n6. How to be a great developer without being a great coder by Nicole Carpenter [Talk] This is a nice talk to watch when you need to be reminded that being a great developer is more than just mastering technical skills.\nThere are no resources for this one, so just watch it and get a boost of motivation.\n7. All the Things I Thought I Couldn\u0026rsquo;t Do by Eileen Uchitelle [Keynote] Watch this one whenever you need to get some motivation. Eileen was a photographer and she is now a Rails core maintainer. This is a kind reminder that everyone starts somewhere!\n These are the top 5 Rails conf 2021 talks that stood out to me. Which one did you like most and that you think I should add here?\n Did you like this article? Then you're gonna love these other ones:\n  On the Job Hunt? Try this one thing to get experience as an early career Ruby dev   Contribute to Ruby on Rails: filtering \u0026amp; reproducing issues   Open Source Thursdays   ","permalink":"https://www.stefannibrasil.me/posts/rails-conf-2021-talks-early-career-devs/","summary":"Now that all Rails Conf 2021 talks, keynotes and workshops are available on YouTube, you might be wondering which ones you should watch first.\nIf you are just getting started with your Rails or programming journey, here\u0026rsquo;s a list of 6 talks for you (with resources):\n1. Implicit to Explicit: Decoding Ruby\u0026rsquo;s Magical Syntax by Justin Gordon [Talk] Do you wish you could understand better what Rails does under the hood?","title":"Rails Conf 2021 Talks for Early Career Devs"},{"content":"In the last Open Source Thursdays live, Thiago and I shared how we chose a few issues that looked promising for us.\nBy the end of the post, you\u0026rsquo;ll learn how to filter issues, and how to start contributing to Rails by reproducing a bug.\nHow to choose your first Ruby on Rails issue Which one from the +300 open issues should you pick? We tried breaking this process down into 2 parts: filtering them by labels, then choosing one that seems easier to fix.\nWe went through the open issues and here\u0026rsquo;s what we found:\n There are no open issues labeled good first issue, so you have to search for some good ones; Most of the open issues are labeled as stale. We ignored those; Issues labeled with reproduction steps look promising because it\u0026rsquo;s easier to work with them when you\u0026rsquo;re starting. When we saw the gist with the steps to reproduce the issue we didn\u0026rsquo;t know how to run it! We learned that you can run a Rails app that is just a single ruby file by using the bundler/inline feature.  We recommend this flow because you would be able to easily reproduce the error, add tests, fix the error, and prove that the fix really works.\nIf that\u0026rsquo;s something you\u0026rsquo;re up to do, keep reading!\nYour Homework: choose your issue to reproduce Go to the rails issues page and follow these steps:\n Remove the issues labeled as stale; Ignore the issues that already have a Pull Request; Choose the ones that have the label with reproduction steps; Bookmark at least 3 issues that look promising to you; Set a 10 minutes timer and choose just one; Set a 30 minutes timer and try to reproduce the issue.  What did you find? What questions do you have about the issue? Do you have a solution to propose?\nMost experienced contributors are happy to help. I wasn\u0026rsquo;t sure what to do next with the issue we reproduced, so I added a comment on the issue to ask for guidance.\nSo that\u0026rsquo;s where we stopped. Next time, we will actually start working on the issue.\nStay tuned for the next steps!\n Did you like this article? Then you're gonna love these other ones:\n  On the Job Hunt? Try this one thing to get experience as an early career Ruby dev   Rails Conf 2021 Talks for Early Career Devs   Open Source Thursdays   ","permalink":"https://www.stefannibrasil.me/posts/contribute-to-rails-github-part-2/","summary":"In the last Open Source Thursdays live, Thiago and I shared how we chose a few issues that looked promising for us.\nBy the end of the post, you\u0026rsquo;ll learn how to filter issues, and how to start contributing to Rails by reproducing a bug.\nHow to choose your first Ruby on Rails issue Which one from the +300 open issues should you pick? We tried breaking this process down into 2 parts: filtering them by labels, then choosing one that seems easier to fix.","title":"Contribute to Ruby on Rails: filtering \u0026 reproducing issues"},{"content":"What is Open Source Thursdays? Open Source Thursdays is a new project from the hexdevs team, aka me and Thiago.\nWe started this project because we\u0026rsquo;ve always wanted to contribute to rails! So we thought, why not do it live so more people can join us? Our goal is to make open source contributions more popular.\nNeither of us has done this before. The plan is to get there and do everything live, no preparing in advance. Just the real work.\nHow can I join? We always schedule the next lives a few days in advance. You can set a reminder to get notifications of when we go live by subscribing to our channel.\nEven if you don\u0026rsquo;t have the time or can\u0026rsquo;t join us live, you can still learn and contribute to rails on your own. I write a summary with the highlights and lessons from every live session to guide you. You can find them here.\nOpen Source Thursdays Lives All previous lives can be accessed here:\n See you on our next live!\n","permalink":"https://www.stefannibrasil.me/posts/open-source-thursdays/","summary":"What is Open Source Thursdays? Open Source Thursdays is a new project from the hexdevs team, aka me and Thiago.\nWe started this project because we\u0026rsquo;ve always wanted to contribute to rails! So we thought, why not do it live so more people can join us? Our goal is to make open source contributions more popular.\nNeither of us has done this before. The plan is to get there and do everything live, no preparing in advance.","title":"Open Source Thursdays"},{"content":"If you\u0026rsquo;re someone who decided to change careers to work as a web developer, then you might be having a hard time trying to land your first job. You aren\u0026rsquo;t alone.\nWe all have heard that there are tons of tech jobs in the market but there aren\u0026rsquo;t qualified professionals to fulfill them. So you go and spend days doing online courses and getting certifications so you can join the wave. Doing this is great to get started but they can only help you at a certain point.\nAlright, what else can I do? How do I get experience if no one is willing to give me an opportunity to even get started? Sorry to bring bad realistic news, but no one will give you an opportunity. You have to create yours.\nJust practicing your coding skills isn\u0026rsquo;t enough When I was learning how to code a few years ago, I would \u0026lsquo;practice\u0026rsquo; my coding skills by following online tutorials and creating tiny apps. This was a great way to get started but eventually, I reached a limit. I needed to get real experience, otherwise, I wouldn\u0026rsquo;t get out of the tuto hell world.\nI knew I didn\u0026rsquo;t have any experience to apply for jobs, so I had to try something else. I went to local meetups, I gave talks, I attended 2-days workshops until one day I applied to be a coach in one of them. Besides that, I also shared my journey and coding studies on my blog.\nBecause I was putting myself out there and I had great communication skills, I landed my first internship. There are no guarantees this works 100% of the time but it creates more opportunities than just do another course.\nLanding this internship wasn\u0026rsquo;t easy and I almost gave up because I couldn\u0026rsquo;t finish the coding challenge! I was so focused on what I lacked that I couldn\u0026rsquo;t see what I had to contribute.\nIt\u0026rsquo;s easy to focus too much on technical skills and forget about the other skills that make you a better professional. Yes, you will be coding on a computer but your work will be designed, reviewed evaluated, and used by humans.\nCan you see the difference between \u0026ldquo;keep practicing\u0026rdquo; and actively creating your opportunities?\nYou don\u0026rsquo;t need to know everything. No one does. You learn by actively putting yourself out there, and not by doing another workshop, especially when you already have done several of them.\nSchools and colleges are living proofs that \u0026lsquo;learning\u0026rsquo; in a controlled environment doesn\u0026rsquo;t guarantee you\u0026rsquo;ll know how to solve problems when you\u0026rsquo;re out there in the real world.\nYou don\u0026rsquo;t need to get a dev job to get experience After you understand and apply the basic concepts of programming, the fastest you grasp opportunities to immerse yourself in real-world projects and working with others, the faster you\u0026rsquo;ll advance your coding skills.\nWhenever you spot one of these, do it without hesitating (unless, of course, it\u0026rsquo;s an unpaid internship by a company making lots of money).\nIt doesn\u0026rsquo;t matter if it\u0026rsquo;s an internship, open-source contributions, or solving a problem for a friend/family member as a freelancer professional. Important to mention that even landing an internship is also competitive but it might lead to a full-time job offer.\nBy applying what you\u0026rsquo;ve learned in a direct approach like this you\u0026rsquo;ll know what you don\u0026rsquo;t know. It\u0026rsquo;s way better than learning every best way to implement this Rails or that React feature. Do it, learn, keep doing this.\nIf you decide to keep practicing on your own (aka, continue doing what you\u0026rsquo;re doing) you already know the results. It\u0026rsquo;s like always working out the same muscle with the same weights at the gym: it\u0026rsquo;s cozy, it feels like progress and everything will stay the same. You can\u0026rsquo;t complain about the outputs if the inputs are always the same.\nOh, and next time you\u0026rsquo;re convinced you should wait until you have learned x, y or z to apply for jobs, try this: put a white male U.S. senator cape, leap through the doubt and just show up. Thanks, Leslie Knope.\nWhat do you have to lose? You\u0026rsquo;ve already done something brave: you changed your career, and learned how to code! Your next actions will be more clear as you take action. Keep challenging yourself.\n Did you like this article? Then you're gonna love these other ones:\n  An open letter to someone who\u0026rsquo;s received lots of rejections   Dev With No Experience? Here\u0026rsquo;s one way to get experience today.   The Unstuck Guide for Self-Taught Developers   ","permalink":"https://www.stefannibrasil.me/posts/should-i-get-an-internship-or-keep-practicing/","summary":"If you\u0026rsquo;re someone who decided to change careers to work as a web developer, then you might be having a hard time trying to land your first job. You aren\u0026rsquo;t alone.\nWe all have heard that there are tons of tech jobs in the market but there aren\u0026rsquo;t qualified professionals to fulfill them. So you go and spend days doing online courses and getting certifications so you can join the wave.","title":"Should I Get an Internship or Keep Practicing my Coding Skills?"},{"content":"Step 1: Decide to find one open-source project to contribute 😎\nStep 2: Keep looking 👀\nStep 3: They are all intimidating, is that normal? 😑\nStep 4: What if I contributed to a project I have lots of experience with, like rails? I\u0026rsquo;d love to understand more about this tool I use every day 🤔\nStep 5: OMG, the code is huge and scary, Will this even run on my machine? 🥴\nStep 6: This is not for me. Eventually, I\u0026rsquo;ll find one that is more welcoming to open source beginners like me 😔\nStep 7: That never happens. You will try again after next year\u0026rsquo;s railsconf.\nIf you ever get to the rails repository hoping to contribute you see +384 open issues. Which one should you pick? How do people even get started? Even worse: they all seem pretty hard.\nIf this daunting feeling is familiar to you, welcome to the club my friend because I know how does that feel like. By the end of this post, you\u0026rsquo;ll feel less intimated to contribute to rails today (if you want).\nOpen source onboarding for the rest of us Eileen Uchitelle, from the Rails Core Team Member, mentioned on her railsconf keynote how she got started. She did lots of pair programming with experienced rails contributors.\nBut, you probably don\u0026rsquo;t work for Shopify or Github. At least, I don\u0026rsquo;t.\nThat got me thinking\u0026hellip; what if I don\u0026rsquo;t have to do it by myself?\nSo I recruited Thiago, my partner in crime to do it with me. We tried to make good use of the hexdevs YouTube channel to share our contribution to rails live.\nTo our surprise, Gabi Stefanini, Engineering Team Lead at Shopify, and Rafael Franca (Rails core contributor, also from Shopify) joined us!\nWe didn\u0026rsquo;t expect anyone to show up to be honest, but having them there made us feel less intimated. We also learned a lot doing this chat remote onboarding with them:\n Not sure how to know if you set up rails successfully? Running the test suites means you\u0026rsquo;re good to go 🎉 You don\u0026rsquo;t actually need to set up the entire rails project to get started. You can choose one module. We went with ActionPack because it doesn\u0026rsquo;t require any database drivers. After forking and cloning the project, go to the module you want to get started and run the tests to verify the setup (cd activepack then rake tests). Hint: if you get an error, run bundle exec rake test. Contributing to Open Source goes beyond writing code. Reproducing issues or testing patches, translating the guides are all great ways to get started and make a difference with your work. If you found something confusing or missing, why not turn it into a better experience for the next person? Chances are you\u0026rsquo;re not the only one. Keeping the documentation up to date and clear to whoever joins after you is super important to make other beginners get involved. Open source etiquette is learned by\u0026hellip; making contributions. A great way to get started is to look at previous commits and Pull requests. I wasn\u0026rsquo;t sure how to name my branch, my commits, or even my Pull Request but Thiago suggested looking at the previous ones to get an idea. I was super nervous but having someone there was very comforting! The rails documentation is great! Kudos to whoever put effort and time into creating it! Nothing beats the developer experience of having great documentation. Having your first PR merged live was a hell of a surprise!   Here\u0026rsquo;s a 15min talk sharing more:\n  Your Homework: contribute to rails today Go to the rails project on github. Fork it, then clone it. Take a look at the modules there and choose one to get started by making sure you can run its test suite.\nGo through the documentation and see if you can find something that needs to be updated, or translated. Could you try reproducing a bug? Fixing a patch?\nLet me know what you end up doing! Start small but start today. You\u0026rsquo;ll never know how much you\u0026rsquo;ll learn from this experience 🙂\nIf you found this post useful and want to get involved with contributing to rails with us, you\u0026rsquo;re super invited to join us next time! We want to install rails the easy way using a VM (I found this super cool! You don\u0026rsquo;t need to install all the dependencies by yourself) and be able to run all the tests.\nThe easiest way to get notified is to sign up for my mailing list below, or to subscribe to our YouTube channel to set reminders for next time we go live.\n Did you like this article? Then you're gonna love these other ones:\n  On the Job Hunt? Try this one thing to get experience as an early career Ruby dev   Rails Conf 2021 Talks for Early Career Devs   Contribute to Ruby on Rails: filtering \u0026amp; reproducing issues   ","permalink":"https://www.stefannibrasil.me/posts/how-to-contribute-to-ruby-on-rails-project-on-github/","summary":"Step 1: Decide to find one open-source project to contribute 😎\nStep 2: Keep looking 👀\nStep 3: They are all intimidating, is that normal? 😑\nStep 4: What if I contributed to a project I have lots of experience with, like rails? I\u0026rsquo;d love to understand more about this tool I use every day 🤔\nStep 5: OMG, the code is huge and scary, Will this even run on my machine?","title":"How to Contribute to Ruby on Rails Open Source project"},{"content":"Ruby is keeping you interested in transitioning to the software development world. But you\u0026rsquo;re not sure you\u0026rsquo;re gonna be employable. You might have heard that you should just choose JavaScript because, you know, everyone is saying Ruby is a dying domain.\nBut you don\u0026rsquo;t see yourself keeping up with the Kardashians traditional JS web dev world.\nYou\u0026rsquo;ve heard that there are plenty of Ruby/Rails jobs out there. But how do you get your first one as an early career dev?\nHere\u0026rsquo;s a fun activity you can do today to get you moving towards finding your first Ruby/Rails job:\n Find a local (regional, national) Ruby/Rails community. Check out the Ruby meetup calendar or this list of upcoming Ruby conferences; Choose one active person in that community. Tip: look for people who give talks regularly or are mentors. Or even someone who had a similar journey as you*. Send them a message asking how they got their first job.  If you don’t know what to send, here’s a template that you can use: “Hi! I’ve been practicing Ruby and I found you from this community! I hope you don’t mind reaching out. I’d like to ask you how did you get your first Ruby job?”.\nAsking specific questions like these shows that you did your research, and helps people understand how they can help you. It\u0026rsquo;s great to meet more experienced devs and potentially create a mentorship relationship.\nBy reaching out to someone from the Ruby community you will see opportunities you never thought of before. I bet worrying about the market is not helping a lot, so go out there and start creating your opportunities today.\n*Please keep in mind that reaching out to people with a genuine connection request is different than spamming them. Check out this thread about reaching out to people respectfully:\nA thing I have noticed lately: in media, we spend a lot of time encouraging folks to find a mentor and develop a relationship with them. We often to not tell people there is a correct and incorrect way to go about this. Maybe we think \u0026quot;everyone should know,\u0026quot;--a big bias to have\n\u0026mdash; Emma Carew Grovum (@emmacarew) May 5, 2021   Did you like this article? Then you're gonna love these other ones:\n  On the Job Hunt? Try this one thing to get experience as an early career Ruby dev   Rails Conf 2021 Talks for Early Career Devs   Contribute to Ruby on Rails: filtering \u0026amp; reproducing issues   ","permalink":"https://www.stefannibrasil.me/posts/will-i-find-work-if-i-learn-ruby/","summary":"Ruby is keeping you interested in transitioning to the software development world. But you\u0026rsquo;re not sure you\u0026rsquo;re gonna be employable. You might have heard that you should just choose JavaScript because, you know, everyone is saying Ruby is a dying domain.\nBut you don\u0026rsquo;t see yourself keeping up with the Kardashians traditional JS web dev world.\nYou\u0026rsquo;ve heard that there are plenty of Ruby/Rails jobs out there. But how do you get your first one as an early career dev?","title":"Will I Find Work if I Learn Ruby in 2021"},{"content":"Welcome! Please check your inbox to confirm your subscription: The email is coming from \u0026ldquo;Stefanni\u0026rdquo;. If you can\u0026rsquo;t find it in your inbox, check your other tabs or the spam folder.\nStill can\u0026rsquo;t find it? Send a message to hi@stefannibrasil.me and I\u0026rsquo;ll fix it for you.\nSee you in your inbox!\n","permalink":"https://www.stefannibrasil.me/confirm-your-subscription/","summary":"Welcome! Please check your inbox to confirm your subscription: The email is coming from \u0026ldquo;Stefanni\u0026rdquo;. If you can\u0026rsquo;t find it in your inbox, check your other tabs or the spam folder.\nStill can\u0026rsquo;t find it? Send a message to hi@stefannibrasil.me and I\u0026rsquo;ll fix it for you.\nSee you in your inbox!","title":"Check your email"},{"content":"Hi, nice seeing you here! Here\u0026rsquo;s what you\u0026rsquo;re looking for:\nSlides\n-- Rails API-only Cheat Sheet\nThank you for checking these materials out! Let me know your thoughts, feedback or suggestions! :)\n-Stefanni Brasil\n ","permalink":"https://www.stefannibrasil.me/railsconf/","summary":"Hi, nice seeing you here! Here\u0026rsquo;s what you\u0026rsquo;re looking for:\nSlides\n-- Rails API-only Cheat Sheet\nThank you for checking these materials out! Let me know your thoughts, feedback or suggestions! :)\n-Stefanni Brasil\n ","title":"Rails Conf 2021 Slides + Rails API-only Cheat Sheet"},{"content":"Before you get too excited and run rails new thecoolest --api on your terminal, it might be a good idea to take some time to consider what your needs are.\nHow different is a Rails API-only from a full-stack Rails app? As you can see in the image below, the API-only is a lighter version of a full stack Rails app:\nThe reason why it\u0026rsquo;s lighter is because Rails API-only won\u0026rsquo;t render HTML pages, handle user sessions \u0026amp; cookies, nor display any assets.\nRails API-only was built for the scenarios where you need a Rails application that serves JSON resources to an API client or client-side framework.\nThat said, if you need to render HTML pages or files, you\u0026rsquo;ll be better off building an API on top of a Rails app.\nRails API-only Cheat Sheet Check out this cheat sheet with the most important things to consider when deciding which Rails app configuration you should go with:\nDownload your Rails API-only Cheat Sheet\nSidenote: if you\u0026rsquo;re building an API, please consider following the OpenAPI specification. You can use Swagger for implementing it. rwsagger is the most popular option.\n Did you like this article? Then you're gonna love these other ones:\n  On the Job Hunt? Try this one thing to get experience as an early career Ruby dev   Rails Conf 2021 Talks for Early Career Devs   Contribute to Ruby on Rails: filtering \u0026amp; reproducing issues   ","permalink":"https://www.stefannibrasil.me/posts/should-you-go-with-rails-api-only/","summary":"Before you get too excited and run rails new thecoolest --api on your terminal, it might be a good idea to take some time to consider what your needs are.\nHow different is a Rails API-only from a full-stack Rails app? As you can see in the image below, the API-only is a lighter version of a full stack Rails app:\nThe reason why it\u0026rsquo;s lighter is because Rails API-only won\u0026rsquo;t render HTML pages, handle user sessions \u0026amp; cookies, nor display any assets.","title":"Should you create a new Rails app as API-only?"},{"content":"You’re on the list!\nI send out a new letter almost every 2 weeks. It’ll come from hi@stefannibrasil.me\nIf you haven’t yet, you can check out the past blog posts or follow me on Twitter for more thoughts on coding, Ruby, career and happiness.\nWelcome to this newsletter! It\u0026rsquo;s great to have you here ☕\n-Stefanni\n","permalink":"https://www.stefannibrasil.me/thank-you/","summary":"You’re on the list!\nI send out a new letter almost every 2 weeks. It’ll come from hi@stefannibrasil.me\nIf you haven’t yet, you can check out the past blog posts or follow me on Twitter for more thoughts on coding, Ruby, career and happiness.\nWelcome to this newsletter! It\u0026rsquo;s great to have you here ☕\n-Stefanni","title":"Thank You"},{"content":"Which authentication strategy should you use for Rails API? How to implement a secure authentication strategy is by the far the most confusing part of building an API.\nIt\u0026rsquo;s important to evaluate your app requirements before choosing any strategy in the first place to avoid any security implications.\nTo help you figure out which authentication strategy is the best for your case, here are 5 possible solutions for you:\nRails API-only If your API is running as a standalone app and you don\u0026rsquo;t need a web interface of any sort, then a header-based token auth might be enough.\n1. jwt-ruby If you\u0026rsquo;re looking for a simple and secure token-based authentication auth strategy, you can use this gem to generate the JWT (JSON Web Token) to send on your Authentication Request Header.\nPros It provides an out of the box JWT token strategy mechanism.\nCons You need to implement the token verification on the server-side. You can use Rails HTTP authentication support for that.\n2. api_guard Is a token based authentication solution with token refreshing \u0026amp; allowlisting for APIs built on Rails.\nIt\u0026rsquo;s built on top of jwt-ruby, so besides all the JWT functionalities, you also get account creation and authentication features.\nPros It\u0026rsquo;s a clean and simple solution. It can be used with Devise, if needed.\nCons You might not even need a gem, because most of it is honestly not that hard to implement yourself. It\u0026rsquo;s an overhead if you don\u0026rsquo;t need to expire tokens.\nStandard Rails app with API If you need some sort of account management interface for your API, or to implement oauth or omniauth flows, here are some alternatives:\n3. Doorkeeper It\u0026rsquo;s a flexible OAuth 2 provider functionality to your Rails or Grape app.\nPros It provides all oauth flows. Can be used with Devise. Version \u0026gt; supports Rails API-only mode as well.\nCons Don\u0026rsquo;t use it if you don\u0026rsquo;t need an oauth2 flow.\n4. devise_token_auth Use it if your Rails app already uses Devise and you want to add a token-based auth for your API. You can require endpoints to have an authenticated user or not depending on the needs of your API.\nPros If you\u0026rsquo;re happy with Devise and already use it on your Rails app, it\u0026rsquo;s the easiest solution. It also makes it easy to add omniauth provider functionality.\nCons Devise is also well know for bloating your Rails app, so keep this in mind. \u0026gt;= Currently supports Rails version ≥ 4.2.0.\n5. rodauth-rails Rodauth-rails is built on top of Rodauth, which is an authentication framework alternative to Devise.\nPros Rodauth supports JWT, including refresh tokens functionality. Supports Rails API-only mode.\nCons If you need social logins or omniauth providers, you\u0026rsquo;ll need to implement yourself but you can build one yourself using the existing Rodauth API.\nAPI authentication can be super confusing. I hope you got some ideas on how to move forward with choosing the strategy that best suit your API requirements. Taking some time to evalute the best strategy earlier can save you lots of time and work.\n Did you like this article? Then you're gonna love these other ones:\n  On the Job Hunt? Try this one thing to get experience as an early career Ruby dev   Rails Conf 2021 Talks for Early Career Devs   Contribute to Ruby on Rails: filtering \u0026amp; reproducing issues   ","permalink":"https://www.stefannibrasil.me/posts/5-ways-to-handle-your-rails-api-authentication/","summary":"Which authentication strategy should you use for Rails API? How to implement a secure authentication strategy is by the far the most confusing part of building an API.\nIt\u0026rsquo;s important to evaluate your app requirements before choosing any strategy in the first place to avoid any security implications.\nTo help you figure out which authentication strategy is the best for your case, here are 5 possible solutions for you:\nRails API-only If your API is running as a standalone app and you don\u0026rsquo;t need a web interface of any sort, then a header-based token auth might be enough.","title":"5 Ways to Handle Your Rails API Authentication"},{"content":"\u0026ldquo;Maybe Python or Go is a better choice? Or even Javascript?\u0026rdquo; If you\u0026rsquo;ve been asking yourself these questions, this post is for you.\nWhen I was learning how to code in 2016, Ruby on Rails was trending and every startup was using it. It was obvious that learning Rails would be an easy way to get my first dev job. We\u0026rsquo;re in 2021, though, and things have changed.\nThe answer to \u0026ldquo;Is Rails still relevant?\u0026rdquo; depends on your context:\n if you\u0026rsquo;re looking for your first dev job, it depends on how fast you need one. Python and JavaScript seem to have more opportunities for early-career devs. It\u0026rsquo;s not as if there aren\u0026rsquo;t any early-career Rails devs jobs! I saw lots of junior opportunities at Rails Conf, for example. if you\u0026rsquo;re an experienced dev wanting to work on more complex problems using a sophisticated tool, absolutely yes. I\u0026rsquo;ve also heard several times that Ruby jobs are the ones who pay more.  The question then becomes \u0026ldquo;what kind of opportunities are there for Rails devs in 2021?\u0026quot;.\nIs there still a market for Ruby on Rails? The reason why Rails seems to be \u0026lsquo;paused\u0026rsquo; is because there are not lots of things to keep improving it. You can see this as a good thing, though: it\u0026rsquo;s a stable framework!\nRails is a proven, well-understood, and stable web dev standard. That\u0026rsquo;s what makes it popular.\nThat means learning Rails can give you the opportunities to work with:\n  Existing established companies that won\u0026rsquo;t throw away their Rails code. A few examples: Github, Shopify, Vimeo, Clio;\n  Small businesses that don\u0026rsquo;t care which tech stack you build their products;\n  Early-stage companies adopting Rails. A few examples: circle.so, orbit.love, meetcleo.com.\n  So if any of these markets look like what you\u0026rsquo;d be happy working with, then you can invest your time learning Rails without worrying there aren\u0026rsquo;t gonna have jobs for you.\n If you\u0026rsquo;d also like to know the opinion from experienced Rails dev besides my own, you might be interested in checking out the replies for this question on Twitter:\nExperienced Rails devs:\nWhat would you say to an entry-level dev who asked you if it\u0026#39;s a good idea for them to learn Ruby/Rails?\n\u0026mdash; Stefanni Brasil (@stefannibrasil) May 4, 2021   Did you like this article? Then you're gonna love these other ones:\n  On the Job Hunt? Try this one thing to get experience as an early career Ruby dev   Rails Conf 2021 Talks for Early Career Devs   Contribute to Ruby on Rails: filtering \u0026amp; reproducing issues   ","permalink":"https://www.stefannibrasil.me/posts/is-ruby-on-rails-still-relevant/","summary":"\u0026ldquo;Maybe Python or Go is a better choice? Or even Javascript?\u0026rdquo; If you\u0026rsquo;ve been asking yourself these questions, this post is for you.\nWhen I was learning how to code in 2016, Ruby on Rails was trending and every startup was using it. It was obvious that learning Rails would be an easy way to get my first dev job. We\u0026rsquo;re in 2021, though, and things have changed.\nThe answer to \u0026ldquo;Is Rails still relevant?","title":"Is Ruby on Rails Still Relevant in 2021?"},{"content":"Hello, I’m Stefanni Brasil. Brasil is my real name, how cool is that?! :)\nI am the co-creator of hexdevs, where I share what I learn. I work as a Senior Software Developer, and was a previous core maintainer of faker-ruby.\nI am a self-taught developer, avid reader, and cats lover. I write here on my blog, and at the hexdevs blog. I have also written at thoughtbot\u0026rsquo;s blog.\nI enjoy working with existing codebases, and improving the code and team processes.\nCurrently, my life interests have changed and I decided to direct my online community work to my local community. I\u0026rsquo;ve been volunteering and participating in local communities, and investing in being more connected with my neighbours and like-minded people where I live. I am really interested in building stronger communities through active transportation, sustainable living and healthier neighborhoods.\nI am a huge believer that everyone is capable of achieving whatever they want for their lives. I\u0026rsquo;m driven by curiosity, compassion and kindness.\nSpeaking My work has been featured on a couple podcasts, conferences, meetups, blogs and scientific papers:\nTalks  Why Work in Public: And how to do it with Open Source - thoughtbot Open Summit 2024. From RSpec to Jest: JavaScript testing for Rails devs - RailsConf 2024. JavaScript testing for Ruby devs - Sin City Ruby 2024. Perceptual Learning == More Ruby Experts? - RubyConf 2021. How to contribute to Ruby on Rails - WNB.rb. Should I go with Rails API-only? - RailsConf 2021. Developing Yourself as a Junior Developer - Vanruby meetup. Rails 5 System Tests - Vanruby meetup.  Podcasts  Rails World and Open Source with Stefanni Brasil - The Bike Shed. Supercritical Gem (with Stefanni Brasil) - Dead Code. Getting out of her head with Stefanni Brasil - Who\u0026rsquo;s Agile Ruby Rogues - Stefanni Brasil - Ruby Rogues. Stefanni Brasil, Co-Creator of Hex Devs - Code with Jason. Process Improvement with Stefanni Brasil - Legacy Code Rocks. When Is Tackling Tech Debt Possible? - Maintainable podcast. Code with Jason with Stefanni Brasil and Thiago Araujo, co-creators of hexdevs - Code with Jason Podcast. Get to Senior with Stefanni Brasil and Thiago Araujo (hexdevs) - The Ruby on Rails podcast. Discussing Tech Careers with Thiago Araujo and Stefanni Brasil of Hexdevs - Remote Ruby. Perceptual Learning with Stefanni Brasil - Code with Jason. Things I wish someone had told me when I was learning to code as a self-taught developer - New Relic\u0026rsquo;s Launchies Podcast. RailsConf Scholars: 2021 Remote Edition - Greater than Code.  Other media  Computer und Kommunikation 4.5.2024, komplette Sendung - German radio episode about faker and Humor in Software With Great Humor Comes Great Developer Engagement - KTH Royal Institute of Technology scientic research. 5 Reasons To Turn That Idea Into A RubyConf 2022 Talk - RubyTogether.  Fun facts about me I am from Brazil and I live Canada ⛰️🌧️\nI\u0026rsquo;ve worked with lots of things in the past: as academic researcher, writer and translator; English and French teacher. In 2015, I decided to change my career and work as a Software Developer. Since then, I\u0026rsquo;ve worked at startups, consulting agencies, and contributed to open source projects.\nI love learning, including how to learn more effectively. I like to see how much I can change, and how much I can become a better version of myself. And help others avoid the mistakes I made (and continue making).\nOnce I get interested in something, I’m pretty good at extracting what’s useful for me and changing my habits until I get a positive feedback loop. A few things I\u0026rsquo;m proud to have learned by myself:\n To be kind to myself, and take care of my mental health. I learned English when I was a teenager by listening to songs and watching movies. My family didn\u0026rsquo;t have lots of money to invest in my education. Also, I lived in such a tiny city that school languages didn\u0026rsquo;t even exist. I adopted a whole foods plant-based diet at the end of 2019. I\u0026rsquo;m super healthy effortlessly. It\u0026rsquo;s also good to not contribute to animal cruelty. I rewired my brain to have a growth mindset and be more positive. I even read self-help books now. All thanks to CBT - Cognitive-Behaviour Therapy and Mindfulness Meditation (and lots of books and coaching). Update in 2023: I\u0026rsquo;ve started taking anti-depressants, and that has also made a huge positive difference in my wellbeing. I\u0026rsquo;ve since stopped but it helped me a lot. I read a lot about anything. I basically eat books for breakfast. I also apply what I learn from them, and share my lessons throughout my writing. I have a degree in Portuguese \u0026amp; French Literature. I also won a scholarship to study at the University of Coimbra - Portugal - for 2 years. I loved spending my time researching Science Fiction and Media Culture. I learned how to code when I was finishing my Literature degree. I enrolled in a Computer Science degree later but dropped it after 1 year to achieve my dream of moving abroad. I’m on my path to being the first millionaire in my family. I believe that gaining economic power is key to do the changes I want to see in the world. I love exercising! I run, I ride my bike, I do yoga, I do lots of bodyweight exercises, hiking.   I am @stefannibrasil.me on BlueSky. Say hi :)\nWant to get in touch? Send me an email at stefanni at hexdevs dot com.\n","permalink":"https://www.stefannibrasil.me/about/","summary":"About Stefanni Brasil","title":"Hi there! 👋"},{"content":"I believed I had to be born confident, and I wasn’t, so why keep trying? How happy I am to have been wrong about that!\nThis post offers exercises from the book “The Confidence Code: The Science and Art of Self-Assurance - What Women Should Know” and from Cognitive Behaviour Therapy.\nStart practicing these 8 key activities and see how you feel a few weeks from now.\nReady? 🚀\nExercises to build self-confidence  When in doubt, ACT. Decide. What kills confidence is overthinking. Keep deciding as if your life depends on it. If it helps, write down the consequences of your decision, and think through it with an analytical perspective. What do you have to lose? It\u0026rsquo;s probably less than you think. Fail fast. Learn. Keep trying. This process builds thicker skin. You’ll get more confident by trying, not from getting perfect on the first try. Perfection is the killer of great things. Take risks. Afraid of failing? So what, do it anyway! Risk keeps you on life’s edge. It keeps you growing, feeling inspired, and gaining confidence. Turn your fear into an ally. Fear is a powerful feeling. Instead of letting it stop you, imagine using that force to get you moving towards what you want. Break your big goals into small actionable goals. When facing big challenges, break them down into smaller parts. Something as simple as writing down a to-do list works. Practice self-compassion. When things don’t go as you expected, practice self-compassion. The central precept of self-compassion is that we should all be kinder to ourselves because doing so makes us healthier, more fulfilled, and more successful in the pursuits we choose. You always get to try again. Name your inner negative voices. I started naming my negative voices: Judge Judy, Pam the Planner. This helps me handle my cognitive distortions better. Once I identify who my voices are, I can say “thanks, Pam, but we’ll be fine!”. Once you become aware of your inner negative voices, you gain power over them. By the way, if your name is Judy or Pam, feel free to use my name for your voices :P. Start a Thought Record Journal. When you get yourself too overwhelmed by your cognitive distortions, add them to a Thought Record. Why does it work? It shows you that your thoughts are way less powerful than you believe. Making them ‘real’ gives you an analytical perspective of the situation, and you realize it’s not a big deal.  It\u0026rsquo;s not easy to change your thoughts and behaviors. But it gets easier every time you persist 🏋️‍♀️.\nGood luck with your self-confidence journey. You won\u0026rsquo;t regret investing in it.\nSelf-confidence books and articles The Confidence Code: The Science and Art of Self-Assurance - What women should know\nRadical Acceptance: Awakening the Love That Heals Fear and Shame\nFeeling Good: The New Mood Therapy\nCognitive Behavioral Therapy\nHow to practice Mindfulness\n Did you like this article? Then you're gonna love these other ones:\n  2024: reflections on the moral obligations of being a better person   Asking for Help Can Be Hard \u0026ndash; Here is How to Make it Easier   My Experience With Anxiety, Depression, Therapy and Taking Anti-Depressants   ","permalink":"https://www.stefannibrasil.me/posts/how-to-practice-self-confidence/","summary":"I believed I had to be born confident, and I wasn’t, so why keep trying? How happy I am to have been wrong about that!\nThis post offers exercises from the book “The Confidence Code: The Science and Art of Self-Assurance - What Women Should Know” and from Cognitive Behaviour Therapy.\nStart practicing these 8 key activities and see how you feel a few weeks from now.\nReady? 🚀\nExercises to build self-confidence  When in doubt, ACT.","title":"8 exercises to build confidence in yourself"}]